#-*-Makefile-*-
# Makefile for gEDA/PCB hardware designs

###############################################################################
# Configurable Targets
help:
	@echo
	@echo "The following targets are available"
	@echo
	@echo "  make [help]  prints this message."
	@echo "  make schem   opens main schematic sheet for editing"
	@echo "  make layout  opens PCB layout for editing with layer colors"
	@echo "  make net     generates netlist from *.sch.renum files"
	@echo "  make pcb     generates initial PCB layout from *.sch file"
	@echo "  make gerber  generates Gerber CAM output from *.pcb file"
	@echo "  make fab     generates zip file of Gerbers for fabrication"
	@echo "  make asm     generates zip file of drawings/BOM for assembly"
	@echo "  make ps      generates Postscript layer plots"
	@echo "  make pdf     generates PDF layer plots"
	@echo "  make schemps generates Postscript from schematic sheets"
	@echo
	@echo "The following variable modifiers are available:"
	@echo
	@echo $(HELP_LOCAL)
	@echo

clean:
	rm -rf *.renum.sch *.log *.drc *.tgt *~ *.log *.stackdump PCB.*
	rm -rf $(GBR_DIR) $(PS_DIR) *.zip $(TARGETS_BOM)
	rm -rf $(FAB_ZIP)* $(ASM_ZIP)* $(SCH_ZIP)*
	rm -rf $(FAB_DIR) $(ASM_DIR) $(SCH_DIR)
	rm -rf *.pcb.bak* *.pcb- *.cmd *.net $(BOARD)-$(REV)

ifndef GROOT
$(error 'Define GROOT to the path such that \$GROOT/bin contains gEDA binaries.')
endif

TOP_SRC_DIR = ~/sf/svnroot/hardware
GBIN = $(GROOT)/bin
GSCM_DIR = $(GROOT)/share/gEDA/scheme
GSCHEM = $(GBIN)/gschem 
GRENUM = $(GBIN)/refdes_renum --nocopy
GNET = $(GBIN)/gnetlist -q
G2PCB = gsch2pcb --use-files
PCB = $(GBIN)/pcb
GBR = $(PCB) -x gerber --verbose --gerberfile $(GBR_PRE)
GBR_DIR = gerber_cam
GBR_PRE = $(GBR_DIR)/$(BOARD)-$(REV)
PS_DIR = postscript
PS_PRE = $(PS_DIR)/$(BOARD)-$(REV)
GSCHEMRC = gschemrc
GAFRC = gafrc
GNETLISTRC = gnetlistrc
RC_FILES = $(GSCHEMRC) $(GAFRC) $(GNETLISTRC)

SCHEM_FILES += $(BOARD).sch
SVNROOT = https://pulse-sequencer.svn.sf.net/svnroot/pulse-sequencer
TARGETS_RENUM = $(TARGETS:.sch=.renum.sch)
TARGETS_NET = $(TARGETS:.sch=.net)
TARGETS_DRC = $(TARGETS:.sch=.drc)
TARGETS_PCB = $(TARGETS:.sch=.pcb)
TARGETS_SCHEM = $(SCHEM_FILES:.sch=.tgt)
SCHEMPS_FILES = $(SCHEM_FILES:.sch=.ps)
TARGETS_SCHEMPS = $(foreach file, $(SCHEMPS_FILES), $(SCH_DIR)/$(file))

GERBER_FILES_FRONT = \
	$(GBR_PRE).back.gbr \
	$(GBR_PRE).backmask.gbr \
	$(GBR_PRE).front.gbr \
	$(GBR_PRE).frontmask.gbr \
	$(GBR_PRE).frontpaste.gbr \
	$(GBR_PRE).frontsilk.gbr \
	$(GBR_PRE).outline.gbr \
	$(GBR_PRE).fab.gbr \
	$(GBR_PRE).plated-drill.cnc \
	$(GBR_PRE).unplated-drill.cnc \

GERBER_FILES = $(GERBER_FILES_FRONT) \
	$(GBR_PRE).backpaste.gbr \
	$(GBR_PRE).backsilk.gbr \

PS_FILES_FRONT = \
	$(PS_PRE).front.ps \
	$(PS_PRE).back.ps \
	$(PS_PRE).outline.ps \
	$(PS_PRE).frontmask.ps \
	$(PS_PRE).backmask.ps \
	$(PS_PRE).plated-drill.ps \
	$(PS_PRE).unplated-drill.ps \
	$(PS_PRE).frontsilk.ps \
	$(PS_PRE).frontpaste.ps \
	$(PS_PRE).frontassembly.ps \
	$(PS_PRE).fab.ps \

PS_FILES_BACK = \
	$(PS_PRE).backsilk.ps \
	$(PS_PRE).backpaste.ps \
	$(PS_PRE).backassembly.ps \

PS_FILES = $(PS_FILES_FRONT) $(PS_FILES_BACK)

PDF_FILES = $(PS_FILES:.ps=.pdf)
TARGETS_PDF = $(TARGETS_PS:.ps=.pdf)

# High-speed boards need power/ground inner planes
GERBER_FILES_HS = $(GERBER_FILES) \
	$(GBR_PRE).group3.gbr \
	$(GBR_PRE).group4.gbr \

GERBER_FILES_HS_FRONT = $(GERBER_FILES_FRONT) \
	$(GBR_PRE).group3.gbr \
	$(GBR_PRE).group4.gbr \

PS_FILES_HS = $(PS_FILES) \
	$(PS_PRE).group3.ps \
	$(PS_PRE).group4.ps \

PS_FILES_HS_FRONT = $(PS_FILES_FRONT) \
	$(PS_PRE).group3.ps \
	$(PS_PRE).group4.ps \

FAB_ZIP = $(BOARD)-$(REV)-fab.zip
ASM_ZIP = $(BOARD)-$(REV)-asm.zip
SCH_ZIP = $(BOARD)-$(REV)-sch.zip
FAB_DIR = $(BOARD)-$(REV)-fabrication
ASM_DIR = $(BOARD)-$(REV)-assembly
SCH_DIR = $(BOARD)-$(REV)-schematics

TARGETS_BOM = $(BOARD)-$(REV).bom $(BOARD)-$(REV).xy

%.tgt: %.sch
	touch $@

%.renum.sch: %.sch
	$(GRENUM) $<
	mv $<.renum $@

$(SCH_DIR)/%.ps: %.sch
	$(GSCHEM) -p -o $@ -s ../scripts/print.scm $<

%.pdf: %.ps
	ps2pdf $< $@

%.net: %.sch %.tgt
	$(GNET) -g PCB -o $@ $<

%.drc: %.sch %.tgt
	$(GNET) -g drc2 -o $@ $<

%.pcb: %.prj %.tgt
	$(G2PCB) $<
	touch $@ # If no new elements are added, touch to update timestamp

%.zip.md5: %.zip
	md5sum $< >> $@

%.bz2.md5: %.bz2
	md5sum $< >> $@

$(TARGETS_BOM): $(BOARD).pcb
	$(PCB) -x bom --bomfile $(BOARD)-$(REV).bom --xyfile $(BOARD)-$(REV).xy \
		$<

$(GBR_DIR):
	mkdir -p $@

$(SCH_DIR):
	mkdir -p $@

$(TARGETS_GERBER): $(BOARD).pcb $(GBR_DIR)
	$(GBR) $<

$(SCH_ZIP): $(TARGETS_SCHEMPS)
	zip -r $(SCH_ZIP) $(SCH_DIR)

$(FAB_ZIP): $(TARGETS_GERBER)
	zip -r $(FAB_ZIP) $(GBR_DIR)

$(ASM_ZIP): $(TARGETS_BOM) $(TARGETS_PDF)
	mkdir -p $(ASM_DIR)
	cp $(TARGETS_BOM) $(ASM_DIR)/
	cp $(PS_PRE).*assembly.pdf $(ASM_DIR)/
	zip -r $(ASM_ZIP) $(ASM_DIR)

$(BOARD).tgt: $(TARGETS_SCHEM)

$(BOARD)-$(REV).zip:
	svn export $(SVNROOT)/hardware $(BOARD)-$(REV)
	zip -r $@ $(BOARD)-$(REV)

$(PS_DIR):
	mkdir -p $@

$(TARGETS_SCHEMPS): $(SCH_DIR)

$(TARGETS_PS): $(BOARD).pcb $(PS_DIR)
	$(PCB) -x ps --psfile $(PS_PRE) --align-marks --outline --ps-color --media Letter --scale 1.0 --multi-file $<

$(GSCHEMRC): ../geda-dotfiles/$(GSCHEMRC)
	ln -s $< $@

$(GAFRC): ../geda-dotfiles/$(GAFRC)
	ln -s $< $@

$(GNETLISTRC): ../geda-dotfiles/$(GNETLISTRC)
	ln -s $< $@

renum: $(TARGETS_RENUM)
drc: $(RC_FILES) $(TARGETS_DRC)
pcb: $(RC_FILES) $(TARGETS_PCB) net
net: $(RC_FILES) $(TARGETS_NET)
gerber: $(RC_FILES) $(TARGETS_GERBER)
fab: $(RC_FILES) $(FAB_ZIP) $(FAB_ZIP).md5
asm: $(RC_FILES) $(ASM_ZIP) $(ASM_ZIP).md5
schemps: $(RC_FILES) $(SCH_ZIP) $(SCH_ZIP).md5
schem: $(GSCHEMRC) $(GAFRC)
	$(GSCHEM) $(BOARD).sch
layout: $(RC_FILES)
	$(PCB) $(LAYER_COLORS) $(BOARD).pcb
ps: $(RC_FILES) $(TARGETS_PS)
pdf: $(RC_FILES) $(TARGETS_PDF)
bom: $(RC_FILES) $(TARGETS_BOM)
tag:
	svn cp -m "Tagging of $(BOARD) revision $(REV)."\
		$(SVNROOT)/hardware/$(BOARD) $(SVNROOT)/tags/$(BOARD)-$(REV)
untag:
	svn rm -m "Undo tagging of $(BOARD) revision $(REV)."\
		$(SVNROOT)/tags/$(BOARD)-$(REV)
export: $(BOARD)-$(REV).zip $(BOARD)-$(REV).zip.md5

