/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2004 Altera Corporation
Any  megafunction  design,  and related netlist (encrypted  or  decrypted),
support information,  device programming or simulation file,  and any other
associated  documentation or information  provided by  Altera  or a partner
under  Altera's   Megafunction   Partnership   Program  may  be  used  only
to program  PLD  devices (but not masked  PLD  devices) from  Altera.   Any
other  use  of such  megafunction  design,  netlist,  support  information,
device programming or simulation file,  or any other  related documentation
or information  is prohibited  for  any  other purpose,  including, but not
limited to  modification,  reverse engineering,  de-compiling, or use  with
any other  silicon devices,  unless such use is  explicitly  licensed under
a separate agreement with  Altera  or a megafunction partner.  Title to the
intellectual property,  including patents,  copyrights,  trademarks,  trade
secrets,  or maskworks,  embodied in any such megafunction design, netlist,
support  information,  device programming or simulation file,  or any other
related documentation or information provided by  Altera  or a megafunction
partner, remains with Altera, the megafunction partner, or their respective
licensors. No other licenses, including any licenses needed under any third
party's intellectual property, are provided herein.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	SIMULATION_TIME = 4000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("bit_count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("bit_count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "bit_count";
}

SIGNAL("bit_count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "bit_count";
}

SIGNAL("bit_count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "bit_count";
}

SIGNAL("daisy_recv_dat_cyc")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("daisy_recv_stb_ack")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("daisy_xmit_dat_cyc")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("daisy_xmit_stb_ack")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("wb_clk_i")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("wb_rst_i")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("xmit_wbs_ack_o")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("xmit_wbs_cyc_i")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("xmit_wbs_dat_i[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("xmit_wbs_dat_i[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("xmit_wbs_dat_i[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("xmit_wbs_dat_i[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("xmit_wbs_dat_i[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("xmit_wbs_dat_i[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("xmit_wbs_dat_i[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("xmit_wbs_dat_i[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("xmit_wbs_stb_i")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("xmit_byte[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("xmit_byte[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("xmit_byte[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("xmit_byte[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("xmit_byte[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("xmit_byte[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("xmit_byte[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("xmit_byte[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("ack_stable_count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("ack_stable_count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "ack_stable_count";
}

SIGNAL("ack_stable_count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "ack_stable_count";
}

SIGNAL("ack_stable_count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "ack_stable_count";
}

SIGNAL("timeout_counter")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("timeout_counter[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "timeout_counter";
}

SIGNAL("timeout_counter[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "timeout_counter";
}

SIGNAL("timeout_counter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "timeout_counter";
}

SIGNAL("timeout_counter[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "timeout_counter";
}

SIGNAL("busy_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

GROUP("xmit_wbs_dat_i")
{
	MEMBERS = "xmit_wbs_dat_i[0]", "xmit_wbs_dat_i[1]", "xmit_wbs_dat_i[2]", "xmit_wbs_dat_i[3]", "xmit_wbs_dat_i[4]", "xmit_wbs_dat_i[5]", "xmit_wbs_dat_i[6]", "xmit_wbs_dat_i[7]";
}

GROUP("xmit_byte")
{
	MEMBERS = "xmit_byte[0]", "xmit_byte[1]", "xmit_byte[2]", "xmit_byte[3]", "xmit_byte[4]", "xmit_byte[5]", "xmit_byte[6]", "xmit_byte[7]";
}

TRANSITION_LIST("bit_count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 365.0;
		LEVEL 1 FOR 370.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 870.0;
		LEVEL 1 FOR 370.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 505.0;
	}
}

TRANSITION_LIST("bit_count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 195.0;
		LEVEL 1 FOR 170.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 190.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 170.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 190.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 505.0;
	}
}

TRANSITION_LIST("bit_count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 115.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 70.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 520.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 70.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 415.0;
	}
}

TRANSITION_LIST("daisy_recv_dat_cyc")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 880.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 880.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 870.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 820.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
	}
}

TRANSITION_LIST("daisy_recv_stb_ack")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 80.0;
	}
}

TRANSITION_LIST("daisy_xmit_dat_cyc")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 230.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 230.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 85.0;
	}
}

TRANSITION_LIST("daisy_xmit_stb_ack")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 115.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 50.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 470.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 50.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 355.0;
	}
}

TRANSITION_LIST("wb_clk_i")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 400;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("wb_rst_i")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 3990.0;
	}
}

TRANSITION_LIST("xmit_wbs_ack_o")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 855.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1230.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 375.0;
	}
}

TRANSITION_LIST("xmit_wbs_cyc_i")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 1630.0;
		LEVEL 0 FOR 370.0;
		LEVEL 1 FOR 1630.0;
		LEVEL 0 FOR 360.0;
	}
}

TRANSITION_LIST("xmit_wbs_dat_i[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("xmit_wbs_dat_i[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("xmit_wbs_dat_i[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 880.0;
		LEVEL 1 FOR 770.0;
		LEVEL 0 FOR 1230.0;
		LEVEL 1 FOR 770.0;
		LEVEL 0 FOR 350.0;
	}
}

TRANSITION_LIST("xmit_wbs_dat_i[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 1640.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 1640.0;
		LEVEL 0 FOR 350.0;
	}
}

TRANSITION_LIST("xmit_wbs_dat_i[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("xmit_wbs_dat_i[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 880.0;
		LEVEL 1 FOR 770.0;
		LEVEL 0 FOR 1230.0;
		LEVEL 1 FOR 770.0;
		LEVEL 0 FOR 350.0;
	}
}

TRANSITION_LIST("xmit_wbs_dat_i[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 870.0;
		LEVEL 0 FOR 1130.0;
		LEVEL 1 FOR 870.0;
		LEVEL 0 FOR 1120.0;
	}
}

TRANSITION_LIST("xmit_wbs_dat_i[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("xmit_wbs_stb_i")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 1630.0;
		LEVEL 0 FOR 370.0;
		LEVEL 1 FOR 1630.0;
		LEVEL 0 FOR 360.0;
	}
}

TRANSITION_LIST("xmit_byte[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("xmit_byte[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("xmit_byte[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 935.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1990.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1055.0;
	}
}

TRANSITION_LIST("xmit_byte[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 820.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 1090.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 820.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 985.0;
	}
}

TRANSITION_LIST("xmit_byte[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 115.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 1020.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 905.0;
	}
}

TRANSITION_LIST("xmit_byte[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 195.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 660.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 1020.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 660.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 825.0;
	}
}

TRANSITION_LIST("xmit_byte[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 580.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 850.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 580.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 745.0;
	}
}

TRANSITION_LIST("xmit_byte[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 115.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 170.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 780.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 170.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 665.0;
	}
}

TRANSITION_LIST("ack_stable_count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("ack_stable_count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 280.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 55.0;
	}
}

TRANSITION_LIST("ack_stable_count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 280.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 65.0;
	}
}

TRANSITION_LIST("timeout_counter[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1765.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 1860.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 95.0;
	}
}

TRANSITION_LIST("timeout_counter[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1725.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 1850.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 125.0;
	}
}

TRANSITION_LIST("timeout_counter[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 565.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 920.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 920.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 125.0;
	}
}

TRANSITION_LIST("timeout_counter[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 130.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 130.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 55.0;
	}
}

TRANSITION_LIST("busy_out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 1990.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 1930.0;
		LEVEL 0 FOR 55.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "wb_clk_i";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "wb_rst_i";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "daisy_xmit_stb_ack";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "daisy_xmit_dat_cyc";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "daisy_recv_stb_ack";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "daisy_recv_dat_cyc";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_wbs_ack_o";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_wbs_cyc_i";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_wbs_stb_i";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_wbs_dat_i";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12, 13, 14, 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_wbs_dat_i[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_wbs_dat_i[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_wbs_dat_i[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_wbs_dat_i[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_wbs_dat_i[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_wbs_dat_i[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_wbs_dat_i[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_wbs_dat_i[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_byte";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20, 21, 22, 23, 24, 25, 26;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_byte[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_byte[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_byte[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_byte[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_byte[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_byte[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_byte[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "xmit_byte[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "bit_count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
	CHILDREN = 28, 29, 30;
}

DISPLAY_LINE
{
	CHANNEL = "bit_count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "bit_count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "bit_count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "ack_stable_count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
	CHILDREN = 32, 33, 34;
}

DISPLAY_LINE
{
	CHANNEL = "ack_stable_count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "ack_stable_count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "ack_stable_count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "timeout_counter";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
	CHILDREN = 36, 37, 38, 39;
}

DISPLAY_LINE
{
	CHANNEL = "timeout_counter[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "timeout_counter[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "timeout_counter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "timeout_counter[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "busy_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 14150;
	MASTER = TRUE;
}
;
