/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2004 Altera Corporation
Any  megafunction  design,  and related netlist (encrypted  or  decrypted),
support information,  device programming or simulation file,  and any other
associated  documentation or information  provided by  Altera  or a partner
under  Altera's   Megafunction   Partnership   Program  may  be  used  only
to program  PLD  devices (but not masked  PLD  devices) from  Altera.   Any
other  use  of such  megafunction  design,  netlist,  support  information,
device programming or simulation file,  or any other  related documentation
or information  is prohibited  for  any  other purpose,  including, but not
limited to  modification,  reverse engineering,  de-compiling, or use  with
any other  silicon devices,  unless such use is  explicitly  licensed under
a separate agreement with  Altera  or a megafunction partner.  Title to the
intellectual property,  including patents,  copyrights,  trademarks,  trade
secrets,  or maskworks,  embodied in any such megafunction design, netlist,
support  information,  device programming or simulation file,  or any other
related documentation or information provided by  Altera  or a megafunction
partner, remains with Altera, the megafunction partner, or their respective
licensors. No other licenses, including any licenses needed under any third
party's intellectual property, are provided herein.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	SIMULATION_TIME = 4000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("daisy_recv_dat_cyc")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("daisy_recv_stb_ack")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("daisy_xmit_dat_cyc")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("daisy_xmit_stb_ack")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("recv_wbm_ack_i")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("recv_wbm_cyc_o")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("recv_wbm_dat_o[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("recv_wbm_dat_o[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("recv_wbm_dat_o[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("recv_wbm_dat_o[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("recv_wbm_dat_o[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("recv_wbm_dat_o[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("recv_wbm_dat_o[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("recv_wbm_dat_o[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("recv_wbm_stb_o")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("wb_clk_i")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("wb_rst_i")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("bit_count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("bit_count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "bit_count";
}

SIGNAL("bit_count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "bit_count";
}

SIGNAL("bit_count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "bit_count";
}

SIGNAL("bit_count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "bit_count";
}

SIGNAL("recv_byte[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("recv_byte[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("recv_byte[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("recv_byte[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("recv_byte[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("recv_byte[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("recv_byte[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("recv_byte[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("ack_stable_count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("ack_stable_count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "ack_stable_count";
}

SIGNAL("ack_stable_count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "ack_stable_count";
}

SIGNAL("ack_stable_count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "ack_stable_count";
}

SIGNAL("cyc_stable_count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("cyc_stable_count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "cyc_stable_count";
}

SIGNAL("cyc_stable_count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "cyc_stable_count";
}

SIGNAL("cyc_stable_count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "cyc_stable_count";
}

SIGNAL("state.idle")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("state.receive_bit")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("state.receive_bit_ack")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("state.receive_byte_done")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("state.receive_last_bit")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("state.receive_start")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("state.receive_stop")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("state.receive_wb_ack")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("timeout_counter")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("timeout_counter[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "timeout_counter";
}

SIGNAL("timeout_counter[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "timeout_counter";
}

SIGNAL("timeout_counter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "timeout_counter";
}

SIGNAL("timeout_counter[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "timeout_counter";
}

SIGNAL("busy_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

GROUP("recv_wbm_dat_o")
{
	MEMBERS = "recv_wbm_dat_o[0]", "recv_wbm_dat_o[1]", "recv_wbm_dat_o[2]", "recv_wbm_dat_o[3]", "recv_wbm_dat_o[4]", "recv_wbm_dat_o[5]", "recv_wbm_dat_o[6]", "recv_wbm_dat_o[7]";
}

GROUP("recv_byte")
{
	MEMBERS = "recv_byte[0]", "recv_byte[1]", "recv_byte[2]", "recv_byte[3]", "recv_byte[4]", "recv_byte[5]", "recv_byte[6]", "recv_byte[7]";
}

TRANSITION_LIST("daisy_recv_dat_cyc")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 390.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 390.0;
		LEVEL 1 FOR 85.0;
		LEVEL 0 FOR 355.0;
	}
}

TRANSITION_LIST("daisy_recv_stb_ack")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 650.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 85.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 470.0;
	}
}

TRANSITION_LIST("daisy_xmit_dat_cyc")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 1440.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 335.0;
	}
}

TRANSITION_LIST("daisy_xmit_stb_ack")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 170.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 170.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 335.0;
	}
}

TRANSITION_LIST("recv_wbm_ack_i")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 730.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1230.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 750.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 500.0;
	}
}

TRANSITION_LIST("recv_wbm_cyc_o")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 1540.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 1540.0;
		LEVEL 0 FOR 405.0;
	}
}

TRANSITION_LIST("recv_wbm_dat_o[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 725.0;
		LEVEL 1 FOR 630.0;
		LEVEL 0 FOR 1370.0;
		LEVEL 1 FOR 630.0;
		LEVEL 0 FOR 645.0;
	}
}

TRANSITION_LIST("recv_wbm_dat_o[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("recv_wbm_dat_o[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 725.0;
		LEVEL 1 FOR 3275.0;
	}
}

TRANSITION_LIST("recv_wbm_dat_o[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("recv_wbm_dat_o[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("recv_wbm_dat_o[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 725.0;
		LEVEL 1 FOR 630.0;
		LEVEL 0 FOR 1370.0;
		LEVEL 1 FOR 630.0;
		LEVEL 0 FOR 645.0;
	}
}

TRANSITION_LIST("recv_wbm_dat_o[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1355.0;
		LEVEL 1 FOR 1370.0;
		LEVEL 0 FOR 630.0;
		LEVEL 1 FOR 645.0;
	}
}

TRANSITION_LIST("recv_wbm_dat_o[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 725.0;
		LEVEL 1 FOR 630.0;
		LEVEL 0 FOR 1370.0;
		LEVEL 1 FOR 630.0;
		LEVEL 0 FOR 645.0;
	}
}

TRANSITION_LIST("recv_wbm_stb_o")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 725.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1230.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 505.0;
	}
}

TRANSITION_LIST("wb_clk_i")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 400;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("wb_rst_i")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 3990.0;
	}
}

TRANSITION_LIST("bit_count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 655.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 1120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 510.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 465.0;
	}
}

TRANSITION_LIST("bit_count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 415.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 390.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 1130.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 390.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 715.0;
	}
}

TRANSITION_LIST("bit_count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 295.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 270.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 1010.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 270.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 715.0;
	}
}

TRANSITION_LIST("bit_count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 205.0;
		LEVEL 1 FOR 90.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 210.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 920.0;
		LEVEL 1 FOR 90.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 210.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 715.0;
	}
}

TRANSITION_LIST("recv_byte[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 205.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 980.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 775.0;
	}
}

TRANSITION_LIST("recv_byte[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 295.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 1010.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 715.0;
	}
}

TRANSITION_LIST("recv_byte[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 355.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 210.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 920.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 210.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 715.0;
	}
}

TRANSITION_LIST("recv_byte[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 415.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 270.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 1040.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 270.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 835.0;
	}
}

TRANSITION_LIST("recv_byte[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 475.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 270.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 1070.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 270.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 775.0;
	}
}

TRANSITION_LIST("recv_byte[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 535.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 1070.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 715.0;
	}
}

TRANSITION_LIST("recv_byte[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 595.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 920.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 210.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 715.0;
	}
}

TRANSITION_LIST("recv_byte[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 655.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 920.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 715.0;
	}
}

TRANSITION_LIST("ack_stable_count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("ack_stable_count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 50.0;
		}
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		NODE
		{
			REPEAT = 16;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 310.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 50.0;
		}
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		NODE
		{
			REPEAT = 16;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 335.0;
	}
}

TRANSITION_LIST("ack_stable_count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 50.0;
		}
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		NODE
		{
			REPEAT = 16;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 310.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 50.0;
		}
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		NODE
		{
			REPEAT = 16;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 345.0;
	}
}

TRANSITION_LIST("cyc_stable_count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("cyc_stable_count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1575.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1990.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 415.0;
	}
}

TRANSITION_LIST("cyc_stable_count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1565.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1990.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 425.0;
	}
}

TRANSITION_LIST("state.idle")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 1680.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 1610.0;
		LEVEL 1 FOR 335.0;
	}
}

TRANSITION_LIST("state.receive_bit")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 145.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 70.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 415.0;
	}
}

TRANSITION_LIST("state.receive_bit_ack")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 205.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 890.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 685.0;
	}
}

TRANSITION_LIST("state.receive_byte_done")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 785.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 730.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1230.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 730.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 465.0;
	}
}

TRANSITION_LIST("state.receive_last_bit")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 755.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 710.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 1210.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 730.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 475.0;
	}
}

TRANSITION_LIST("state.receive_start")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 1910.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 1855.0;
	}
}

TRANSITION_LIST("state.receive_stop")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1585.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 1850.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 335.0;
	}
}

TRANSITION_LIST("state.receive_wb_ack")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 725.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 1230.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 620.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 505.0;
	}
}

TRANSITION_LIST("timeout_counter[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("timeout_counter[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 95.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 690.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 1230.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 690.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 1135.0;
	}
}

TRANSITION_LIST("timeout_counter[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 550.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 490.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 550.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 415.0;
	}
}

TRANSITION_LIST("timeout_counter[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 65.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 540.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 710.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 510.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 540.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 710.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 445.0;
	}
}

TRANSITION_LIST("busy_out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 1680.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 1610.0;
		LEVEL 0 FOR 335.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "wb_clk_i";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "wb_rst_i";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "daisy_recv_stb_ack";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "daisy_recv_dat_cyc";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "daisy_xmit_stb_ack";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "daisy_xmit_dat_cyc";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recv_wbm_cyc_o";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recv_wbm_stb_o";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "recv_wbm_dat_o";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
	CHILDREN = 9, 10, 11, 12, 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "recv_wbm_dat_o[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "recv_wbm_dat_o[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "recv_wbm_dat_o[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "recv_wbm_dat_o[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "recv_wbm_dat_o[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "recv_wbm_dat_o[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "recv_wbm_dat_o[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "recv_wbm_dat_o[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "recv_wbm_ack_i";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "bit_count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20, 21, 22;
}

DISPLAY_LINE
{
	CHANNEL = "bit_count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "bit_count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "bit_count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "bit_count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "recv_byte";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
	CHILDREN = 24, 25, 26, 27, 28, 29, 30, 31;
}

DISPLAY_LINE
{
	CHANNEL = "recv_byte[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "recv_byte[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "recv_byte[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "recv_byte[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "recv_byte[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "recv_byte[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "recv_byte[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "recv_byte[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "ack_stable_count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 0;
	CHILDREN = 33, 34, 35;
}

DISPLAY_LINE
{
	CHANNEL = "ack_stable_count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "ack_stable_count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "ack_stable_count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "cyc_stable_count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
	CHILDREN = 37, 38, 39;
}

DISPLAY_LINE
{
	CHANNEL = "cyc_stable_count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "cyc_stable_count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "cyc_stable_count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "state.idle";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state.receive_bit";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state.receive_bit_ack";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state.receive_byte_done";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state.receive_last_bit";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state.receive_start";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state.receive_stop";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "state.receive_wb_ack";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "timeout_counter";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
	CHILDREN = 49, 50, 51, 52;
}

DISPLAY_LINE
{
	CHANNEL = "timeout_counter[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "timeout_counter[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "timeout_counter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "timeout_counter[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "busy_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 70000;
	MASTER = TRUE;
}
;
