/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2006 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 2.5us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1";
	SIMULATION_TIME = 2500.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("fired_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("load")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("subtimer:\subcounter_gen:0:subcounter|count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("subtimer:\subcounter_gen:0:subcounter|count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:0:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:0:subcounter|count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:0:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:0:subcounter|count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:0:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:0:subcounter|count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:0:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:1:subcounter|count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("subtimer:\subcounter_gen:1:subcounter|count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:1:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:1:subcounter|count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:1:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:1:subcounter|count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:1:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:1:subcounter|count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:1:subcounter|count";
}

SIGNAL("count_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 64;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("count_in[63]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[62]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[61]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[60]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[59]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[58]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[57]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[56]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[55]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[54]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[53]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[52]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[51]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[50]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[49]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[48]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[47]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[46]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[45]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[44]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[43]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[42]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[41]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[40]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[39]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[38]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[37]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[36]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[35]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[34]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[33]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[32]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "count_in";
}

SIGNAL("count_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 64;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("count_out[63]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[62]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[61]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[60]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[59]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[58]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[57]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[56]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[55]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[54]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[53]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[52]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[51]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[50]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[49]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[48]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[47]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[46]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[45]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[44]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[43]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[42]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[41]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[40]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[39]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[38]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[37]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[36]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[35]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[34]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[33]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[32]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("count_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count_out";
}

SIGNAL("subtimer:\subcounter_gen:2:subcounter|count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("subtimer:\subcounter_gen:2:subcounter|count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:2:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:2:subcounter|count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:2:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:2:subcounter|count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:2:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:2:subcounter|count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:2:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:3:subcounter|count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("subtimer:\subcounter_gen:3:subcounter|count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:3:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:3:subcounter|count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:3:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:3:subcounter|count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:3:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:3:subcounter|count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:3:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:4:subcounter|count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("subtimer:\subcounter_gen:4:subcounter|count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:4:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:4:subcounter|count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:4:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:4:subcounter|count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:4:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:4:subcounter|count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:4:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:5:subcounter|count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("subtimer:\subcounter_gen:5:subcounter|count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:5:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:5:subcounter|count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:5:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:5:subcounter|count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:5:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:5:subcounter|count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:5:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:6:subcounter|count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("subtimer:\subcounter_gen:6:subcounter|count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:6:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:6:subcounter|count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:6:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:6:subcounter|count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:6:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:6:subcounter|count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:6:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:7:subcounter|count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("subtimer:\subcounter_gen:7:subcounter|count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:7:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:7:subcounter|count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:7:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:7:subcounter|count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:7:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:7:subcounter|count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:7:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:8:subcounter|count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("subtimer:\subcounter_gen:8:subcounter|count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:8:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:8:subcounter|count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:8:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:8:subcounter|count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:8:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:8:subcounter|count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:8:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:9:subcounter|count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("subtimer:\subcounter_gen:9:subcounter|count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:9:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:9:subcounter|count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:9:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:9:subcounter|count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:9:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:9:subcounter|count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:9:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:10:subcounter|count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("subtimer:\subcounter_gen:10:subcounter|count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:10:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:10:subcounter|count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:10:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:10:subcounter|count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:10:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:10:subcounter|count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:10:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:11:subcounter|count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("subtimer:\subcounter_gen:11:subcounter|count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:11:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:11:subcounter|count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:11:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:11:subcounter|count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:11:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:11:subcounter|count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:11:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:12:subcounter|count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("subtimer:\subcounter_gen:12:subcounter|count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:12:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:12:subcounter|count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:12:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:12:subcounter|count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:12:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:12:subcounter|count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:12:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:13:subcounter|count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("subtimer:\subcounter_gen:13:subcounter|count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:13:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:13:subcounter|count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:13:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:13:subcounter|count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:13:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:13:subcounter|count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:13:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:14:subcounter|count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("subtimer:\subcounter_gen:14:subcounter|count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:14:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:14:subcounter|count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:14:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:14:subcounter|count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:14:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:14:subcounter|count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:14:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:15:subcounter|count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("subtimer:\subcounter_gen:15:subcounter|count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:15:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:15:subcounter|count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:15:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:15:subcounter|count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:15:subcounter|count";
}

SIGNAL("subtimer:\subcounter_gen:15:subcounter|count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "subtimer:\subcounter_gen:15:subcounter|count";
}

SIGNAL("sclr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("debug_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debug_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_out";
}

SIGNAL("debug_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_out";
}

SIGNAL("debug_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_out";
}

SIGNAL("debug_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_out";
}

SIGNAL("debug_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_out";
}

SIGNAL("debug_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_out";
}

SIGNAL("debug_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_out";
}

SIGNAL("debug_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_out";
}

SIGNAL("subtimer:\subcounter_gen:15:subcounter|is_last")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

TRANSITION_LIST("clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 250;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("fired_out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 610.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 615.0;
	}
}

TRANSITION_LIST("load")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1010.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 940.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:0:subcounter|count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 55.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:0:subcounter|count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:0:subcounter|count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 25;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 15.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:0:subcounter|count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 7;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 45;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 46;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:1:subcounter|count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:1:subcounter|count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:1:subcounter|count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 295.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:1:subcounter|count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 270.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 70.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 135.0;
	}
}

TRANSITION_LIST("count_in[63]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[62]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[61]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[60]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[59]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[58]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[57]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[56]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[55]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[54]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[53]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[52]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[51]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[50]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[49]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[48]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[47]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[46]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[45]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[44]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[43]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[42]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[41]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[40]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[39]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[38]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[37]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[36]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[35]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[34]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[33]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[32]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 530.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1010.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 930.0;
	}
}

TRANSITION_LIST("count_in[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_in[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 230.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1960.0;
	}
}

TRANSITION_LIST("count_in[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1960.0;
	}
}

TRANSITION_LIST("count_in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1960.0;
	}
}

TRANSITION_LIST("count_in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1960.0;
	}
}

TRANSITION_LIST("count_out[63]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_out[62]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_out[61]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_out[60]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("count_out[59]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[58]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[57]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[56]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[55]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[54]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[53]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[52]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[51]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[50]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[49]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[48]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[47]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[46]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[45]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[44]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[43]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[42]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[41]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[40]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[39]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[38]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[37]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[36]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[35]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[34]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[33]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[32]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("count_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 295.0;
	}
}

TRANSITION_LIST("count_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 270.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 70.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 135.0;
	}
}

TRANSITION_LIST("count_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 55.0;
	}
}

TRANSITION_LIST("count_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("count_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 25;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 15.0;
	}
}

TRANSITION_LIST("count_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 7;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 45;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 46;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:2:subcounter|count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:2:subcounter|count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:2:subcounter|count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:2:subcounter|count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:3:subcounter|count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:3:subcounter|count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:3:subcounter|count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:3:subcounter|count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:4:subcounter|count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:4:subcounter|count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:4:subcounter|count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:4:subcounter|count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:5:subcounter|count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:5:subcounter|count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:5:subcounter|count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:5:subcounter|count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:6:subcounter|count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:6:subcounter|count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:6:subcounter|count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:6:subcounter|count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:7:subcounter|count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:7:subcounter|count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:7:subcounter|count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:7:subcounter|count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:8:subcounter|count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:8:subcounter|count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:8:subcounter|count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:8:subcounter|count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:9:subcounter|count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:9:subcounter|count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:9:subcounter|count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:9:subcounter|count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:10:subcounter|count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:10:subcounter|count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:10:subcounter|count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:10:subcounter|count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:11:subcounter|count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:11:subcounter|count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:11:subcounter|count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:11:subcounter|count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:12:subcounter|count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:12:subcounter|count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:12:subcounter|count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:12:subcounter|count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:13:subcounter|count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:13:subcounter|count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:13:subcounter|count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:13:subcounter|count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:14:subcounter|count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:14:subcounter|count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:14:subcounter|count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:14:subcounter|count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 590.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:15:subcounter|count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:15:subcounter|count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:15:subcounter|count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:15:subcounter|count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("sclr")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 2490.0;
	}
}

TRANSITION_LIST("clk_en")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2500.0;
	}
}

TRANSITION_LIST("debug_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("debug_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2475.0;
	}
}

TRANSITION_LIST("debug_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2475.0;
	}
}

TRANSITION_LIST("debug_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 830.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 710.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 615.0;
	}
}

TRANSITION_LIST("debug_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 290.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 150.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 220.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 150.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 135.0;
	}
}

TRANSITION_LIST("debug_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 95.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 610.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 615.0;
	}
}

TRANSITION_LIST("debug_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 95.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 290.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 150.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 150.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 135.0;
	}
}

TRANSITION_LIST("debug_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 610.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 860.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 615.0;
	}
}

TRANSITION_LIST("subtimer:\subcounter_gen:15:subcounter|is_last")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 2475.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	COMMENT
	{
		TIME = 695348;
		RISE = 24;
		RUN = 10;
		TEXT = "16th edge";
		FONT_NAME = "";
		FONT_SIZE = 0;
		FONT_STYLE = "";
		FONT_COLOR = 4294967295;
	}
	COMMENT
	{
		TIME = 857777;
		RISE = 27;
		RUN = 7;
		TEXT = "32nd edge";
		FONT_NAME = "";
		FONT_SIZE = 0;
		FONT_STYLE = "";
		FONT_COLOR = 4294967295;
	}
	COMMENT
	{
		TIME = 1006302;
		RISE = 17;
		RUN = 13;
		TEXT = "2Fth edge";
		FONT_NAME = "";
		FONT_SIZE = 0;
		FONT_STYLE = "";
		FONT_COLOR = 4294967295;
	}
	COMMENT
	{
		TIME = 1165392;
		RISE = 9;
		RUN = 2;
		TEXT = "16th edge";
		FONT_NAME = "";
		FONT_SIZE = 0;
		FONT_STYLE = "";
		FONT_COLOR = 4294967295;
	}
	COMMENT
	{
		TIME = 1326154;
		RISE = 17;
		RUN = 5;
		TEXT = "32nd edge";
		FONT_NAME = "";
		FONT_SIZE = 0;
		FONT_STYLE = "";
		FONT_COLOR = 4294967295;
	}
	COMMENT
	{
		TIME = 1476902;
		RISE = 25;
		RUN = 5;
		TEXT = "2Fth edge";
		FONT_NAME = "";
		FONT_SIZE = 0;
		FONT_STYLE = "";
		FONT_COLOR = 4294967295;
	}
	COMMENT
	{
		TIME = 1716880;
		RISE = 22;
		RUN = 0;
		TEXT = "16th edge";
		FONT_NAME = "";
		FONT_SIZE = 0;
		FONT_STYLE = "";
		FONT_COLOR = 4294967295;
	}
	COMMENT
	{
		TIME = 1876880;
		RISE = 24;
		RUN = 3;
		TEXT = "32nd edge";
		FONT_NAME = "";
		FONT_SIZE = 0;
		FONT_STYLE = "";
		FONT_COLOR = 4294967295;
	}
	COMMENT
	{
		TIME = 2094747;
		RISE = 19;
		RUN = 7;
		TEXT = "16th edge";
		FONT_NAME = "";
		FONT_SIZE = 0;
		FONT_STYLE = "";
		FONT_COLOR = 4294967295;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fired_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "load";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sclr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "debug_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8, 9, 10, 11, 12, 13;
}

DISPLAY_LINE
{
	CHANNEL = "debug_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "debug_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "debug_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "debug_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "debug_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "debug_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "debug_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "debug_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "count_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[63]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[62]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[61]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[60]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[59]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[58]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[57]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[56]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[55]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[54]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[53]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[52]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[51]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[50]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[49]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[48]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[47]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[46]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[45]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[44]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[43]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[42]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[41]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[40]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[39]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[38]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[37]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[36]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[35]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[34]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[33]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[32]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "count_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 0;
	CHILDREN = 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[63]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[62]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[61]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[60]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[59]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[58]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[57]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[56]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[55]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[54]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[53]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[52]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[51]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[50]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[49]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[48]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[47]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[46]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[45]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[44]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[43]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[42]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[41]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[40]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[39]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[38]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[37]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[36]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[35]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[34]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[33]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[32]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 134;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 135;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 136;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 137;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 138;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 139;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 140;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 141;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 142;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "count_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 143;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:15:subcounter|is_last";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 144;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:0:subcounter|count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 145;
	TREE_LEVEL = 0;
	CHILDREN = 146, 147, 148, 149;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:0:subcounter|count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 146;
	TREE_LEVEL = 1;
	PARENT = 145;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:0:subcounter|count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 147;
	TREE_LEVEL = 1;
	PARENT = 145;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:0:subcounter|count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 148;
	TREE_LEVEL = 1;
	PARENT = 145;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:0:subcounter|count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 149;
	TREE_LEVEL = 1;
	PARENT = 145;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:1:subcounter|count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 150;
	TREE_LEVEL = 0;
	CHILDREN = 151, 152, 153, 154;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:1:subcounter|count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 151;
	TREE_LEVEL = 1;
	PARENT = 150;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:1:subcounter|count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 152;
	TREE_LEVEL = 1;
	PARENT = 150;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:1:subcounter|count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 153;
	TREE_LEVEL = 1;
	PARENT = 150;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:1:subcounter|count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 154;
	TREE_LEVEL = 1;
	PARENT = 150;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:2:subcounter|count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 155;
	TREE_LEVEL = 0;
	CHILDREN = 156, 157, 158, 159;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:2:subcounter|count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 156;
	TREE_LEVEL = 1;
	PARENT = 155;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:2:subcounter|count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 157;
	TREE_LEVEL = 1;
	PARENT = 155;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:2:subcounter|count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 158;
	TREE_LEVEL = 1;
	PARENT = 155;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:2:subcounter|count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 159;
	TREE_LEVEL = 1;
	PARENT = 155;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:3:subcounter|count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 160;
	TREE_LEVEL = 0;
	CHILDREN = 161, 162, 163, 164;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:3:subcounter|count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 161;
	TREE_LEVEL = 1;
	PARENT = 160;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:3:subcounter|count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 162;
	TREE_LEVEL = 1;
	PARENT = 160;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:3:subcounter|count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 163;
	TREE_LEVEL = 1;
	PARENT = 160;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:3:subcounter|count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 164;
	TREE_LEVEL = 1;
	PARENT = 160;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:4:subcounter|count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 165;
	TREE_LEVEL = 0;
	CHILDREN = 166, 167, 168, 169;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:4:subcounter|count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 166;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:4:subcounter|count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 167;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:4:subcounter|count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 168;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:4:subcounter|count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 169;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:5:subcounter|count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 170;
	TREE_LEVEL = 0;
	CHILDREN = 171, 172, 173, 174;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:5:subcounter|count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 171;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:5:subcounter|count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 172;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:5:subcounter|count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 173;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:5:subcounter|count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 174;
	TREE_LEVEL = 1;
	PARENT = 170;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:6:subcounter|count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 175;
	TREE_LEVEL = 0;
	CHILDREN = 176, 177, 178, 179;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:6:subcounter|count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 176;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:6:subcounter|count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 177;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:6:subcounter|count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 178;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:6:subcounter|count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 179;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:7:subcounter|count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 180;
	TREE_LEVEL = 0;
	CHILDREN = 181, 182, 183, 184;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:7:subcounter|count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 181;
	TREE_LEVEL = 1;
	PARENT = 180;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:7:subcounter|count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 182;
	TREE_LEVEL = 1;
	PARENT = 180;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:7:subcounter|count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 183;
	TREE_LEVEL = 1;
	PARENT = 180;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:7:subcounter|count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 184;
	TREE_LEVEL = 1;
	PARENT = 180;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:8:subcounter|count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 185;
	TREE_LEVEL = 0;
	CHILDREN = 186, 187, 188, 189;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:8:subcounter|count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 186;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:8:subcounter|count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 187;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:8:subcounter|count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 188;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:8:subcounter|count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 189;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:9:subcounter|count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 190;
	TREE_LEVEL = 0;
	CHILDREN = 191, 192, 193, 194;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:9:subcounter|count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 191;
	TREE_LEVEL = 1;
	PARENT = 190;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:9:subcounter|count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 192;
	TREE_LEVEL = 1;
	PARENT = 190;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:9:subcounter|count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 193;
	TREE_LEVEL = 1;
	PARENT = 190;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:9:subcounter|count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 194;
	TREE_LEVEL = 1;
	PARENT = 190;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:10:subcounter|count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 195;
	TREE_LEVEL = 0;
	CHILDREN = 196, 197, 198, 199;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:10:subcounter|count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 196;
	TREE_LEVEL = 1;
	PARENT = 195;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:10:subcounter|count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 197;
	TREE_LEVEL = 1;
	PARENT = 195;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:10:subcounter|count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 198;
	TREE_LEVEL = 1;
	PARENT = 195;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:10:subcounter|count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 199;
	TREE_LEVEL = 1;
	PARENT = 195;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:11:subcounter|count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 200;
	TREE_LEVEL = 0;
	CHILDREN = 201, 202, 203, 204;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:11:subcounter|count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 201;
	TREE_LEVEL = 1;
	PARENT = 200;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:11:subcounter|count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 202;
	TREE_LEVEL = 1;
	PARENT = 200;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:11:subcounter|count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 203;
	TREE_LEVEL = 1;
	PARENT = 200;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:11:subcounter|count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 204;
	TREE_LEVEL = 1;
	PARENT = 200;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:12:subcounter|count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 205;
	TREE_LEVEL = 0;
	CHILDREN = 206, 207, 208, 209;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:12:subcounter|count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 206;
	TREE_LEVEL = 1;
	PARENT = 205;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:12:subcounter|count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 207;
	TREE_LEVEL = 1;
	PARENT = 205;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:12:subcounter|count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 208;
	TREE_LEVEL = 1;
	PARENT = 205;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:12:subcounter|count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 209;
	TREE_LEVEL = 1;
	PARENT = 205;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:13:subcounter|count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 210;
	TREE_LEVEL = 0;
	CHILDREN = 211, 212, 213, 214;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:13:subcounter|count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 211;
	TREE_LEVEL = 1;
	PARENT = 210;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:13:subcounter|count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 212;
	TREE_LEVEL = 1;
	PARENT = 210;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:13:subcounter|count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 213;
	TREE_LEVEL = 1;
	PARENT = 210;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:13:subcounter|count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 214;
	TREE_LEVEL = 1;
	PARENT = 210;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:14:subcounter|count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 215;
	TREE_LEVEL = 0;
	CHILDREN = 216, 217, 218, 219;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:14:subcounter|count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 216;
	TREE_LEVEL = 1;
	PARENT = 215;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:14:subcounter|count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 217;
	TREE_LEVEL = 1;
	PARENT = 215;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:14:subcounter|count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 218;
	TREE_LEVEL = 1;
	PARENT = 215;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:14:subcounter|count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 219;
	TREE_LEVEL = 1;
	PARENT = 215;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:15:subcounter|count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 220;
	TREE_LEVEL = 0;
	CHILDREN = 221, 222, 223, 224;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:15:subcounter|count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 221;
	TREE_LEVEL = 1;
	PARENT = 220;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:15:subcounter|count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 222;
	TREE_LEVEL = 1;
	PARENT = 220;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:15:subcounter|count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 223;
	TREE_LEVEL = 1;
	PARENT = 220;
}

DISPLAY_LINE
{
	CHANNEL = "subtimer:\subcounter_gen:15:subcounter|count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 224;
	TREE_LEVEL = 1;
	PARENT = 220;
}

TIME_BAR
{
	TIME = 100000;
	MASTER = TRUE;
}
;
