/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2004 Altera Corporation
Any  megafunction  design,  and related netlist (encrypted  or  decrypted),
support information,  device programming or simulation file,  and any other
associated  documentation or information  provided by  Altera  or a partner
under  Altera's   Megafunction   Partnership   Program  may  be  used  only
to program  PLD  devices (but not masked  PLD  devices) from  Altera.   Any
other  use  of such  megafunction  design,  netlist,  support  information,
device programming or simulation file,  or any other  related documentation
or information  is prohibited  for  any  other purpose,  including, but not
limited to  modification,  reverse engineering,  de-compiling, or use  with
any other  silicon devices,  unless such use is  explicitly  licensed under
a separate agreement with  Altera  or a megafunction partner.  Title to the
intellectual property,  including patents,  copyrights,  trademarks,  trade
secrets,  or maskworks,  embodied in any such megafunction design, netlist,
support  information,  device programming or simulation file,  or any other
related documentation or information provided by  Altera  or a megafunction
partner, remains with Altera, the megafunction partner, or their respective
licensors. No other licenses, including any licenses needed under any third
party's intellectual property, are provided herein.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	SIMULATION_TIME = 5000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("avr_reset_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ether_rx_clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("network_clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ptp_sram_addr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ptp_sram_addr[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_addr";
}

SIGNAL("ptp_sram_addr[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_addr";
}

SIGNAL("ptp_sram_addr[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_addr";
}

SIGNAL("ptp_sram_addr[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_addr";
}

SIGNAL("ptp_sram_addr[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_addr";
}

SIGNAL("ptp_sram_addr[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_addr";
}

SIGNAL("ptp_sram_addr[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_addr";
}

SIGNAL("ptp_sram_addr[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_addr";
}

SIGNAL("ptp_sram_addr[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_addr";
}

SIGNAL("ptp_sram_addr[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_addr";
}

SIGNAL("ptp_sram_addr[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_addr";
}

SIGNAL("ptp_sram_addr[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_addr";
}

SIGNAL("ptp_sram_addr[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_addr";
}

SIGNAL("ptp_sram_addr[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_addr";
}

SIGNAL("ptp_sram_addr[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_addr";
}

SIGNAL("ptp_sram_addr[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_addr";
}

SIGNAL("ptp_sram_burst")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ptp_sram_wb_ack")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ptp_sram_wb_adr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ptp_sram_wb_adr[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_adr";
}

SIGNAL("ptp_sram_wb_adr[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_adr";
}

SIGNAL("ptp_sram_wb_adr[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_adr";
}

SIGNAL("ptp_sram_wb_adr[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_adr";
}

SIGNAL("ptp_sram_wb_adr[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_adr";
}

SIGNAL("ptp_sram_wb_adr[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_adr";
}

SIGNAL("ptp_sram_wb_adr[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_adr";
}

SIGNAL("ptp_sram_wb_adr[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_adr";
}

SIGNAL("ptp_sram_wb_adr[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_adr";
}

SIGNAL("ptp_sram_wb_adr[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_adr";
}

SIGNAL("ptp_sram_wb_adr[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_adr";
}

SIGNAL("ptp_sram_wb_adr[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_adr";
}

SIGNAL("ptp_sram_wb_adr[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_adr";
}

SIGNAL("ptp_sram_wb_adr[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_adr";
}

SIGNAL("ptp_sram_wb_adr[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_adr";
}

SIGNAL("ptp_sram_wb_adr[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_adr";
}

SIGNAL("ptp_sram_wb_cyc")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ptp_sram_wb_read_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ptp_sram_wb_read_data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_wb_read_data";
}

SIGNAL("ptp_sram_wb_read_data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_wb_read_data";
}

SIGNAL("ptp_sram_wb_read_data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_wb_read_data";
}

SIGNAL("ptp_sram_wb_read_data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_wb_read_data";
}

SIGNAL("ptp_sram_wb_read_data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_wb_read_data";
}

SIGNAL("ptp_sram_wb_read_data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_wb_read_data";
}

SIGNAL("ptp_sram_wb_read_data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_wb_read_data";
}

SIGNAL("ptp_sram_wb_read_data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ptp_sram_wb_read_data";
}

SIGNAL("ptp_sram_wb_stb")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ptp_sram_wb_we")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ptp_sram_wb_write_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ptp_sram_wb_write_data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_write_data";
}

SIGNAL("ptp_sram_wb_write_data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_write_data";
}

SIGNAL("ptp_sram_wb_write_data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_write_data";
}

SIGNAL("ptp_sram_wb_write_data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_write_data";
}

SIGNAL("ptp_sram_wb_write_data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_write_data";
}

SIGNAL("ptp_sram_wb_write_data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_write_data";
}

SIGNAL("ptp_sram_wb_write_data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_write_data";
}

SIGNAL("ptp_sram_wb_write_data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_wb_write_data";
}

SIGNAL("wb_rst_i")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|core_clock_enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("wb_intercon:sram_arbiter|current_winner")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("wb_intercon:sram_arbiter|current_winner[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "wb_intercon:sram_arbiter|current_winner";
}

SIGNAL("wb_intercon:sram_arbiter|current_winner[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "wb_intercon:sram_arbiter|current_winner";
}

SIGNAL("wb_intercon:sram_arbiter|master_grant")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("wb_intercon:sram_arbiter|master_grant[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "wb_intercon:sram_arbiter|master_grant";
}

SIGNAL("wb_intercon:sram_arbiter|master_grant[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "wb_intercon:sram_arbiter|master_grant";
}

SIGNAL("wb_intercon:sram_sizer8_arbiter|current_winner")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("wb_intercon:sram_sizer8_arbiter|current_winner[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "wb_intercon:sram_sizer8_arbiter|current_winner";
}

SIGNAL("wb_intercon:sram_sizer8_arbiter|current_winner[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "wb_intercon:sram_sizer8_arbiter|current_winner";
}

SIGNAL("wb_intercon:sram_sizer8_arbiter|current_winner[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "wb_intercon:sram_sizer8_arbiter|current_winner";
}

SIGNAL("wb_intercon:sram_sizer8_arbiter|master_grant")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("wb_intercon:sram_sizer8_arbiter|master_grant[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "wb_intercon:sram_sizer8_arbiter|master_grant";
}

SIGNAL("wb_intercon:sram_sizer8_arbiter|master_grant[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "wb_intercon:sram_sizer8_arbiter|master_grant";
}

SIGNAL("wb_intercon:sram_sizer8_arbiter|master_grant[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "wb_intercon:sram_sizer8_arbiter|master_grant";
}

SIGNAL("wb_intercon:sram_sizer8_arbiter|master_grant[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "wb_intercon:sram_sizer8_arbiter|master_grant";
}

SIGNAL("memory_controller:storage|loaded")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("memory_controller:storage|memory_addr_burst")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 17;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("memory_controller:storage|memory_addr_burst[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "memory_controller:storage|memory_addr_burst";
}

SIGNAL("memory_controller:storage|memory_addr_burst[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "memory_controller:storage|memory_addr_burst";
}

SIGNAL("memory_controller:storage|memory_addr_burst[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "memory_controller:storage|memory_addr_burst";
}

SIGNAL("memory_controller:storage|memory_addr_burst[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "memory_controller:storage|memory_addr_burst";
}

SIGNAL("memory_controller:storage|memory_addr_burst[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "memory_controller:storage|memory_addr_burst";
}

SIGNAL("memory_controller:storage|memory_addr_burst[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "memory_controller:storage|memory_addr_burst";
}

SIGNAL("memory_controller:storage|memory_addr_burst[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "memory_controller:storage|memory_addr_burst";
}

SIGNAL("memory_controller:storage|memory_addr_burst[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "memory_controller:storage|memory_addr_burst";
}

SIGNAL("memory_controller:storage|memory_addr_burst[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "memory_controller:storage|memory_addr_burst";
}

SIGNAL("memory_controller:storage|memory_addr_burst[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "memory_controller:storage|memory_addr_burst";
}

SIGNAL("memory_controller:storage|memory_addr_burst[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "memory_controller:storage|memory_addr_burst";
}

SIGNAL("memory_controller:storage|memory_addr_burst[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "memory_controller:storage|memory_addr_burst";
}

SIGNAL("memory_controller:storage|memory_addr_burst[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "memory_controller:storage|memory_addr_burst";
}

SIGNAL("memory_controller:storage|memory_addr_burst[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "memory_controller:storage|memory_addr_burst";
}

SIGNAL("memory_controller:storage|memory_addr_burst[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "memory_controller:storage|memory_addr_burst";
}

SIGNAL("memory_controller:storage|memory_addr_burst[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "memory_controller:storage|memory_addr_burst";
}

SIGNAL("memory_controller:storage|memory_addr_burst[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "memory_controller:storage|memory_addr_burst";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramre_int")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramwe_int")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("avr_port_a_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("avr_port_a_in[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_a_in";
}

SIGNAL("avr_port_a_in[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_a_in";
}

SIGNAL("avr_port_a_in[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_a_in";
}

SIGNAL("avr_port_a_in[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_a_in";
}

SIGNAL("avr_port_a_in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_a_in";
}

SIGNAL("avr_port_a_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_a_in";
}

SIGNAL("avr_port_a_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_a_in";
}

SIGNAL("avr_port_a_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_a_in";
}

SIGNAL("avr_port_a_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("avr_port_a_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_a_out";
}

SIGNAL("avr_port_a_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_a_out";
}

SIGNAL("avr_port_a_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_a_out";
}

SIGNAL("avr_port_a_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_a_out";
}

SIGNAL("avr_port_a_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_a_out";
}

SIGNAL("avr_port_a_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_a_out";
}

SIGNAL("avr_port_a_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_a_out";
}

SIGNAL("avr_port_a_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_a_out";
}

SIGNAL("avr_port_b_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("avr_port_b_in[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_b_in";
}

SIGNAL("avr_port_b_in[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_b_in";
}

SIGNAL("avr_port_b_in[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_b_in";
}

SIGNAL("avr_port_b_in[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_b_in";
}

SIGNAL("avr_port_b_in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_b_in";
}

SIGNAL("avr_port_b_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_b_in";
}

SIGNAL("avr_port_b_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_b_in";
}

SIGNAL("avr_port_b_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_b_in";
}

SIGNAL("avr_port_b_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("avr_port_b_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_b_out";
}

SIGNAL("avr_port_b_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_b_out";
}

SIGNAL("avr_port_b_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_b_out";
}

SIGNAL("avr_port_b_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_b_out";
}

SIGNAL("avr_port_b_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_b_out";
}

SIGNAL("avr_port_b_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_b_out";
}

SIGNAL("avr_port_b_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_b_out";
}

SIGNAL("avr_port_b_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_b_out";
}

SIGNAL("avr_port_c_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("avr_port_c_in[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_c_in";
}

SIGNAL("avr_port_c_in[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_c_in";
}

SIGNAL("avr_port_c_in[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_c_in";
}

SIGNAL("avr_port_c_in[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_c_in";
}

SIGNAL("avr_port_c_in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_c_in";
}

SIGNAL("avr_port_c_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_c_in";
}

SIGNAL("avr_port_c_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_c_in";
}

SIGNAL("avr_port_c_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_c_in";
}

SIGNAL("avr_port_c_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("avr_port_c_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_c_out";
}

SIGNAL("avr_port_c_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_c_out";
}

SIGNAL("avr_port_c_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_c_out";
}

SIGNAL("avr_port_c_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_c_out";
}

SIGNAL("avr_port_c_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_c_out";
}

SIGNAL("avr_port_c_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_c_out";
}

SIGNAL("avr_port_c_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_c_out";
}

SIGNAL("avr_port_c_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_c_out";
}

SIGNAL("avr_port_d_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("avr_port_d_in[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_d_in";
}

SIGNAL("avr_port_d_in[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_d_in";
}

SIGNAL("avr_port_d_in[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_d_in";
}

SIGNAL("avr_port_d_in[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_d_in";
}

SIGNAL("avr_port_d_in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_d_in";
}

SIGNAL("avr_port_d_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_d_in";
}

SIGNAL("avr_port_d_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_d_in";
}

SIGNAL("avr_port_d_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_d_in";
}

SIGNAL("avr_port_d_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("avr_port_d_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_d_out";
}

SIGNAL("avr_port_d_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_d_out";
}

SIGNAL("avr_port_d_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_d_out";
}

SIGNAL("avr_port_d_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_d_out";
}

SIGNAL("avr_port_d_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_d_out";
}

SIGNAL("avr_port_d_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_d_out";
}

SIGNAL("avr_port_d_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_d_out";
}

SIGNAL("avr_port_d_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_d_out";
}

SIGNAL("avr_port_e_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("avr_port_e_in[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_e_in";
}

SIGNAL("avr_port_e_in[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_e_in";
}

SIGNAL("avr_port_e_in[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_e_in";
}

SIGNAL("avr_port_e_in[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_e_in";
}

SIGNAL("avr_port_e_in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_e_in";
}

SIGNAL("avr_port_e_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_e_in";
}

SIGNAL("avr_port_e_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_e_in";
}

SIGNAL("avr_port_e_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_e_in";
}

SIGNAL("avr_port_e_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("avr_port_e_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_e_out";
}

SIGNAL("avr_port_e_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_e_out";
}

SIGNAL("avr_port_e_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_e_out";
}

SIGNAL("avr_port_e_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_e_out";
}

SIGNAL("avr_port_e_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_e_out";
}

SIGNAL("avr_port_e_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_e_out";
}

SIGNAL("avr_port_e_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_e_out";
}

SIGNAL("avr_port_e_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_e_out";
}

SIGNAL("avr_port_f_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("avr_port_f_in[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_f_in";
}

SIGNAL("avr_port_f_in[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_f_in";
}

SIGNAL("avr_port_f_in[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_f_in";
}

SIGNAL("avr_port_f_in[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_f_in";
}

SIGNAL("avr_port_f_in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_f_in";
}

SIGNAL("avr_port_f_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_f_in";
}

SIGNAL("avr_port_f_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_f_in";
}

SIGNAL("avr_port_f_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "avr_port_f_in";
}

SIGNAL("avr_port_f_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("avr_port_f_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_f_out";
}

SIGNAL("avr_port_f_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_f_out";
}

SIGNAL("avr_port_f_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_f_out";
}

SIGNAL("avr_port_f_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_f_out";
}

SIGNAL("avr_port_f_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_f_out";
}

SIGNAL("avr_port_f_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_f_out";
}

SIGNAL("avr_port_f_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_f_out";
}

SIGNAL("avr_port_f_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "avr_port_f_out";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int";
}

SIGNAL("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int";
}

SIGNAL("instruction_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("instruction_out[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction_out";
}

SIGNAL("instruction_out[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction_out";
}

SIGNAL("instruction_out[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction_out";
}

SIGNAL("instruction_out[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction_out";
}

SIGNAL("instruction_out[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction_out";
}

SIGNAL("instruction_out[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction_out";
}

SIGNAL("instruction_out[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction_out";
}

SIGNAL("instruction_out[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction_out";
}

SIGNAL("instruction_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction_out";
}

SIGNAL("instruction_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction_out";
}

SIGNAL("instruction_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction_out";
}

SIGNAL("instruction_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction_out";
}

SIGNAL("instruction_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction_out";
}

SIGNAL("instruction_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction_out";
}

SIGNAL("instruction_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction_out";
}

SIGNAL("instruction_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction_out";
}

SIGNAL("ptp_sram_addr_prefix")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 14;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ptp_sram_addr_prefix[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_addr_prefix";
}

SIGNAL("ptp_sram_addr_prefix[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_addr_prefix";
}

SIGNAL("ptp_sram_addr_prefix[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_addr_prefix";
}

SIGNAL("ptp_sram_addr_prefix[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_addr_prefix";
}

SIGNAL("ptp_sram_addr_prefix[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ptp_sram_addr_prefix";
}

TRANSITION_LIST("avr_reset_in")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1450.0;
		LEVEL 0 FOR 3547.5;
		LEVEL 1 FOR 2.5;
	}
}

TRANSITION_LIST("ether_rx_clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 125;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("network_clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 238;
			LEVEL 0 FOR 10.5;
			LEVEL 1 FOR 10.5;
		}
		LEVEL 0 FOR 2.0;
	}
}

TRANSITION_LIST("ptp_sram_addr[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 73.5;
		LEVEL 0 FOR 1407.0;
		LEVEL 1 FOR 336.0;
		LEVEL 0 FOR 126.0;
		LEVEL 1 FOR 147.0;
		LEVEL 0 FOR 1113.0;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 1671.5;
	}
}

TRANSITION_LIST("ptp_sram_addr[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 73.5;
		LEVEL 0 FOR 1407.0;
		LEVEL 1 FOR 336.0;
		LEVEL 0 FOR 126.0;
		LEVEL 1 FOR 147.0;
		LEVEL 0 FOR 1113.0;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 1671.5;
	}
}

TRANSITION_LIST("ptp_sram_addr[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 73.5;
		LEVEL 0 FOR 1407.0;
		LEVEL 1 FOR 336.0;
		LEVEL 0 FOR 126.0;
		LEVEL 1 FOR 147.0;
		LEVEL 0 FOR 1113.0;
		LEVEL 1 FOR 231.0;
		LEVEL 0 FOR 378.0;
		LEVEL 1 FOR 231.0;
		LEVEL 0 FOR 714.0;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 138.5;
	}
}

TRANSITION_LIST("ptp_sram_addr[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 73.5;
		LEVEL 0 FOR 1407.0;
		LEVEL 1 FOR 336.0;
		LEVEL 0 FOR 126.0;
		LEVEL 1 FOR 147.0;
		LEVEL 0 FOR 1113.0;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 1671.5;
	}
}

TRANSITION_LIST("ptp_sram_addr[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 73.5;
		LEVEL 0 FOR 1407.0;
		LEVEL 1 FOR 336.0;
		LEVEL 0 FOR 126.0;
		LEVEL 1 FOR 147.0;
		LEVEL 0 FOR 1113.0;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 1671.5;
	}
}

TRANSITION_LIST("ptp_sram_addr[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 73.5;
		LEVEL 0 FOR 1407.0;
		LEVEL 1 FOR 336.0;
		LEVEL 0 FOR 126.0;
		LEVEL 1 FOR 147.0;
		LEVEL 0 FOR 1113.0;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 1671.5;
	}
}

TRANSITION_LIST("ptp_sram_addr[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 73.5;
		LEVEL 0 FOR 1407.0;
		LEVEL 1 FOR 336.0;
		LEVEL 0 FOR 126.0;
		LEVEL 1 FOR 147.0;
		LEVEL 0 FOR 1113.0;
		LEVEL 1 FOR 231.0;
		LEVEL 0 FOR 378.0;
		LEVEL 1 FOR 231.0;
		LEVEL 0 FOR 714.0;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 138.5;
	}
}

TRANSITION_LIST("ptp_sram_addr[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 73.5;
		LEVEL 0 FOR 1407.0;
		LEVEL 1 FOR 336.0;
		LEVEL 0 FOR 126.0;
		LEVEL 1 FOR 117.5;
		LEVEL 0 FOR 2940.0;
	}
}

TRANSITION_LIST("ptp_sram_addr[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 73.5;
		LEVEL 0 FOR 1407.0;
		LEVEL 1 FOR 336.0;
		LEVEL 0 FOR 243.5;
		LEVEL 1 FOR 29.5;
		LEVEL 0 FOR 1113.0;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 1671.5;
	}
}

TRANSITION_LIST("ptp_sram_addr[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 73.5;
		LEVEL 0 FOR 1407.0;
		LEVEL 1 FOR 336.0;
		LEVEL 0 FOR 243.5;
		LEVEL 1 FOR 29.5;
		LEVEL 0 FOR 1113.0;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 1671.5;
	}
}

TRANSITION_LIST("ptp_sram_addr[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 73.5;
		LEVEL 0 FOR 1407.0;
		LEVEL 1 FOR 336.0;
		LEVEL 0 FOR 243.5;
		LEVEL 1 FOR 29.5;
		LEVEL 0 FOR 1113.0;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 483.0;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 1060.0;
		LEVEL 1 FOR 2.5;
	}
}

TRANSITION_LIST("ptp_sram_addr[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 73.5;
		LEVEL 0 FOR 924.0;
		LEVEL 1 FOR 819.0;
		LEVEL 0 FOR 243.5;
		LEVEL 1 FOR 29.5;
		LEVEL 0 FOR 1113.0;
		LEVEL 1 FOR 609.0;
		LEVEL 0 FOR 126.0;
		LEVEL 1 FOR 1060.0;
		LEVEL 0 FOR 2.5;
	}
}

TRANSITION_LIST("ptp_sram_addr[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 73.5;
		LEVEL 0 FOR 462.0;
		LEVEL 1 FOR 462.0;
		LEVEL 0 FOR 483.0;
		LEVEL 1 FOR 336.0;
		LEVEL 0 FOR 243.5;
		LEVEL 1 FOR 29.5;
		LEVEL 0 FOR 441.0;
		LEVEL 1 FOR 903.0;
		LEVEL 0 FOR 504.0;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 294.0;
		LEVEL 1 FOR 661.0;
		LEVEL 0 FOR 2.5;
	}
}

TRANSITION_LIST("ptp_sram_addr[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 73.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 231.0;
			LEVEL 1 FOR 231.0;
		}
		LEVEL 0 FOR 231.0;
		LEVEL 1 FOR 211.5;
		LEVEL 0 FOR 19.5;
		LEVEL 1 FOR 357.0;
		LEVEL 0 FOR 63.5;
		LEVEL 1 FOR 62.5;
		LEVEL 0 FOR 117.5;
		LEVEL 1 FOR 29.5;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 294.0;
		LEVEL 0 FOR 294.0;
		LEVEL 1 FOR 609.0;
		LEVEL 0 FOR 315.0;
		LEVEL 1 FOR 63.0;
		LEVEL 0 FOR 126.0;
		LEVEL 1 FOR 399.0;
		LEVEL 0 FOR 294.0;
		LEVEL 1 FOR 367.0;
		LEVEL 0 FOR 2.5;
	}
}

TRANSITION_LIST("ptp_sram_addr[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 178.5;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 126.0;
			LEVEL 0 FOR 105.0;
		}
		LEVEL 1 FOR 567.0;
		LEVEL 0 FOR 3099.5;
	}
}

TRANSITION_LIST("ptp_sram_addr[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 136.5;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 42.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 84.0;
			LEVEL 0 FOR 63.0;
		}
		LEVEL 1 FOR 42.0;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 525.0;
		LEVEL 0 FOR 3099.5;
	}
}

TRANSITION_LIST("ptp_sram_burst")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 1385.0;
		LEVEL 0 FOR 3552.5;
		LEVEL 1 FOR 2.5;
	}
}

TRANSITION_LIST("ptp_sram_wb_ack")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 115.5;
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 21.0;
				LEVEL 0 FOR 21.0;
			}
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 84.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 21.0;
		}
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 84.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 21.0;
		}
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 630.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 1323.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 1407.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 159.5;
	}
}

TRANSITION_LIST("ptp_sram_wb_adr[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1875.0;
		LEVEL 1 FOR 205.0;
		LEVEL 0 FOR 2920.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_adr[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1875.0;
		LEVEL 1 FOR 205.0;
		LEVEL 0 FOR 2920.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_adr[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1875.0;
		LEVEL 1 FOR 205.0;
		LEVEL 0 FOR 980.0;
		LEVEL 1 FOR 325.0;
		LEVEL 0 FOR 374.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 190.0;
		}
		LEVEL 0 FOR 401.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 110.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_adr[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1875.0;
		LEVEL 1 FOR 205.0;
		LEVEL 0 FOR 2920.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_adr[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1875.0;
		LEVEL 1 FOR 205.0;
		LEVEL 0 FOR 2920.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_adr[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1875.0;
		LEVEL 1 FOR 205.0;
		LEVEL 0 FOR 2920.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_adr[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1875.0;
		LEVEL 1 FOR 205.0;
		LEVEL 0 FOR 980.0;
		LEVEL 1 FOR 325.0;
		LEVEL 0 FOR 374.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 190.0;
		}
		LEVEL 0 FOR 401.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 110.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_adr[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1875.0;
		LEVEL 1 FOR 205.0;
		LEVEL 0 FOR 2920.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_adr[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_adr[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_adr[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3060.0;
		LEVEL 1 FOR 325.0;
		LEVEL 0 FOR 374.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 190.0;
		}
		LEVEL 0 FOR 401.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 110.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_adr[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_adr[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_adr[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_adr[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3060.0;
		LEVEL 1 FOR 325.0;
		LEVEL 0 FOR 374.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 190.0;
		}
		LEVEL 0 FOR 401.0;
		LEVEL 1 FOR 540.0;
		LEVEL 0 FOR 110.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_adr[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_cyc")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 63.0;
		LEVEL 1 FOR 1377.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 1111.0;
		LEVEL 1 FOR 189.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 189.0;
		LEVEL 0 FOR 761.0;
		LEVEL 1 FOR 175.0;
		LEVEL 0 FOR 112.5;
		LEVEL 1 FOR 2.5;
	}
}

TRANSITION_LIST("ptp_sram_wb_read_data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3244.5;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 1449.0;
		LEVEL 1 FOR 201.5;
	}
}

TRANSITION_LIST("ptp_sram_wb_read_data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_read_data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3244.5;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 1449.0;
		LEVEL 1 FOR 201.5;
	}
}

TRANSITION_LIST("ptp_sram_wb_read_data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_read_data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3244.5;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 1449.0;
		LEVEL 1 FOR 201.5;
	}
}

TRANSITION_LIST("ptp_sram_wb_read_data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_read_data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3244.5;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 1449.0;
		LEVEL 1 FOR 201.5;
	}
}

TRANSITION_LIST("ptp_sram_wb_read_data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3244.5;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 1449.0;
		LEVEL 1 FOR 201.5;
	}
}

TRANSITION_LIST("ptp_sram_wb_stb")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 63.0;
		LEVEL 1 FOR 1377.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 1111.0;
		LEVEL 1 FOR 189.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 189.0;
		LEVEL 0 FOR 761.0;
		LEVEL 1 FOR 175.0;
		LEVEL 0 FOR 112.5;
		LEVEL 1 FOR 2.5;
	}
}

TRANSITION_LIST("ptp_sram_wb_we")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 1380.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 2937.5;
		LEVEL 1 FOR 2.5;
	}
}

TRANSITION_LIST("ptp_sram_wb_write_data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 145.0;
		LEVEL 1 FOR 44.0;
		LEVEL 0 FOR 86.0;
		LEVEL 1 FOR 229.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 145.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 106.0;
		LEVEL 1 FOR 44.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 675.0;
		LEVEL 1 FOR 204.0;
		LEVEL 0 FOR 2921.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_write_data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 380.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 230.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 146.0;
		LEVEL 1 FOR 84.0;
		LEVEL 0 FOR 3845.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_write_data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 380.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 44.0;
		LEVEL 0 FOR 106.0;
		LEVEL 1 FOR 315.0;
		LEVEL 0 FOR 146.0;
		LEVEL 1 FOR 84.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 144.0;
		LEVEL 0 FOR 531.0;
		LEVEL 1 FOR 204.0;
		LEVEL 0 FOR 2921.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_write_data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 145.0;
		LEVEL 1 FOR 44.0;
		LEVEL 0 FOR 271.0;
		LEVEL 1 FOR 44.0;
		LEVEL 0 FOR 106.0;
		LEVEL 1 FOR 275.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 106.0;
		LEVEL 1 FOR 44.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 3800.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_write_data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 85.0;
		LEVEL 0 FOR 44.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 230.0;
		LEVEL 1 FOR 84.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 190.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 186.0;
		LEVEL 1 FOR 44.0;
		LEVEL 0 FOR 760.0;
		LEVEL 1 FOR 204.0;
		LEVEL 0 FOR 2921.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_write_data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 130.0;
		LEVEL 0 FOR 881.0;
		LEVEL 1 FOR 44.0;
		LEVEL 0 FOR 3885.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_write_data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 190.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 229.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 145.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 190.0;
		LEVEL 0 FOR 186.0;
		LEVEL 1 FOR 44.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 189.0;
		LEVEL 0 FOR 531.0;
		LEVEL 1 FOR 204.0;
		LEVEL 0 FOR 2921.0;
	}
}

TRANSITION_LIST("ptp_sram_wb_write_data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 190.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 44.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 380.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 106.0;
		LEVEL 1 FOR 44.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 675.0;
		LEVEL 1 FOR 204.0;
		LEVEL 0 FOR 2921.0;
	}
}

TRANSITION_LIST("wb_rst_i")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 4960.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|core_clock_enable")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1606.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 126.0;
		}
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 252.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 126.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 210.0;
		}
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 126.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 252.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 168.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 126.0;
		}
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 33.5;
	}
}

TRANSITION_LIST("wb_intercon:sram_arbiter|current_winner[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 115.5;
		LEVEL 0 FOR 4884.5;
	}
}

TRANSITION_LIST("wb_intercon:sram_arbiter|current_winner[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1522.5;
		LEVEL 1 FOR 420.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 1113.0;
		LEVEL 0 FOR 231.0;
		LEVEL 1 FOR 378.0;
		LEVEL 0 FOR 231.0;
		LEVEL 1 FOR 714.0;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 138.5;
	}
}

TRANSITION_LIST("wb_intercon:sram_arbiter|master_grant[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1522.5;
		LEVEL 1 FOR 420.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 1113.0;
		LEVEL 0 FOR 231.0;
		LEVEL 1 FOR 378.0;
		LEVEL 0 FOR 231.0;
		LEVEL 1 FOR 714.0;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 138.5;
	}
}

TRANSITION_LIST("wb_intercon:sram_arbiter|master_grant[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 115.5;
		LEVEL 1 FOR 1407.0;
		LEVEL 0 FOR 420.0;
		LEVEL 1 FOR 147.0;
		LEVEL 0 FOR 1113.0;
		LEVEL 1 FOR 231.0;
		LEVEL 0 FOR 378.0;
		LEVEL 1 FOR 231.0;
		LEVEL 0 FOR 714.0;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 138.5;
	}
}

TRANSITION_LIST("wb_intercon:sram_sizer8_arbiter|current_winner[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 73.5;
		LEVEL 0 FOR 4926.5;
	}
}

TRANSITION_LIST("wb_intercon:sram_sizer8_arbiter|current_winner[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3139.5;
		LEVEL 1 FOR 168.0;
		LEVEL 0 FOR 441.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 1041.5;
	}
}

TRANSITION_LIST("wb_intercon:sram_sizer8_arbiter|current_winner[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5000.0;
	}
}

TRANSITION_LIST("wb_intercon:sram_sizer8_arbiter|master_grant[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3139.5;
		LEVEL 1 FOR 168.0;
		LEVEL 0 FOR 441.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 1041.5;
	}
}

TRANSITION_LIST("wb_intercon:sram_sizer8_arbiter|master_grant[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("wb_intercon:sram_sizer8_arbiter|master_grant[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73.5;
		LEVEL 1 FOR 3066.0;
		LEVEL 0 FOR 168.0;
		LEVEL 1 FOR 441.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 1041.5;
	}
}

TRANSITION_LIST("wb_intercon:sram_sizer8_arbiter|master_grant[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("memory_controller:storage|loaded")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 304.5;
		LEVEL 1 FOR 1176.0;
		LEVEL 0 FOR 3519.5;
	}
}

TRANSITION_LIST("memory_controller:storage|memory_addr_burst[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 304.5;
		LEVEL 1 FOR 4695.5;
	}
}

TRANSITION_LIST("memory_controller:storage|memory_addr_burst[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 304.5;
		LEVEL 1 FOR 4695.5;
	}
}

TRANSITION_LIST("memory_controller:storage|memory_addr_burst[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("memory_controller:storage|memory_addr_burst[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("memory_controller:storage|memory_addr_burst[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("memory_controller:storage|memory_addr_burst[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("memory_controller:storage|memory_addr_burst[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("memory_controller:storage|memory_addr_burst[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("memory_controller:storage|memory_addr_burst[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("memory_controller:storage|memory_addr_burst[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("memory_controller:storage|memory_addr_burst[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("memory_controller:storage|memory_addr_burst[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("memory_controller:storage|memory_addr_burst[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("memory_controller:storage|memory_addr_burst[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("memory_controller:storage|memory_addr_burst[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 997.5;
		LEVEL 1 FOR 4002.5;
	}
}

TRANSITION_LIST("memory_controller:storage|memory_addr_burst[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 535.5;
		LEVEL 1 FOR 462.0;
		LEVEL 0 FOR 462.0;
		LEVEL 1 FOR 3540.5;
	}
}

TRANSITION_LIST("memory_controller:storage|memory_addr_burst[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 304.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 231.0;
			LEVEL 0 FOR 231.0;
		}
		LEVEL 1 FOR 231.0;
		LEVEL 0 FOR 3540.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4588.5;
		LEVEL 1 FOR 411.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2782.5;
		LEVEL 1 FOR 1806.0;
		LEVEL 0 FOR 411.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2194.5;
		LEVEL 1 FOR 588.0;
		LEVEL 0 FOR 1176.0;
		LEVEL 1 FOR 630.0;
		LEVEL 0 FOR 411.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1774.5;
		LEVEL 1 FOR 420.0;
		LEVEL 0 FOR 294.0;
		LEVEL 1 FOR 294.0;
		LEVEL 0 FOR 525.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 336.0;
		LEVEL 1 FOR 294.0;
		LEVEL 0 FOR 378.0;
		LEVEL 1 FOR 33.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1627.5;
		LEVEL 1 FOR 147.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 273.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 147.0;
			LEVEL 1 FOR 147.0;
		}
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 378.0;
		LEVEL 0 FOR 231.0;
		LEVEL 1 FOR 420.0;
		LEVEL 0 FOR 189.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 147.0;
			LEVEL 0 FOR 147.0;
		}
		LEVEL 1 FOR 231.0;
		LEVEL 0 FOR 33.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3076.5;
		LEVEL 1 FOR 609.0;
		LEVEL 0 FOR 1314.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3076.5;
		LEVEL 1 FOR 609.0;
		LEVEL 0 FOR 1314.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3076.5;
		LEVEL 1 FOR 1923.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3076.5;
		LEVEL 1 FOR 609.0;
		LEVEL 0 FOR 1314.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3076.5;
		LEVEL 1 FOR 609.0;
		LEVEL 0 FOR 1314.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3076.5;
		LEVEL 1 FOR 609.0;
		LEVEL 0 FOR 1314.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3076.5;
		LEVEL 1 FOR 1923.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3076.5;
		LEVEL 1 FOR 609.0;
		LEVEL 0 FOR 1314.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3685.5;
		LEVEL 1 FOR 1314.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3685.5;
		LEVEL 1 FOR 1314.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramre_int")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3076.5;
		LEVEL 1 FOR 231.0;
		LEVEL 0 FOR 1692.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramwe_int")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3685.5;
		LEVEL 1 FOR 273.0;
		LEVEL 0 FOR 1041.5;
	}
}

TRANSITION_LIST("avr_port_a_in[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_a_in[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_a_in[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_a_in[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_a_in[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_a_in[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_a_in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_a_in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_a_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2656.5;
		LEVEL 1 FOR 2343.5;
	}
}

TRANSITION_LIST("avr_port_a_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_a_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2656.5;
		LEVEL 1 FOR 2343.5;
	}
}

TRANSITION_LIST("avr_port_a_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_a_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_a_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2656.5;
		LEVEL 1 FOR 2343.5;
	}
}

TRANSITION_LIST("avr_port_a_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_a_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2656.5;
		LEVEL 1 FOR 2343.5;
	}
}

TRANSITION_LIST("avr_port_b_in[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_b_in[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_b_in[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_b_in[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_b_in[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_b_in[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_b_in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_b_in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_b_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_b_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_b_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_b_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_b_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_b_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_b_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_b_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_c_in[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_c_in[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_c_in[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_c_in[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_c_in[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_c_in[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_c_in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_c_in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_c_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_c_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_c_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_c_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_c_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_c_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_c_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_c_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_d_in[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_d_in[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_d_in[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_d_in[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_d_in[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_d_in[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_d_in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_d_in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_d_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_d_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_d_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_d_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_d_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_d_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_d_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_d_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_e_in[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_e_in[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_e_in[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_e_in[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_e_in[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_e_in[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_e_in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_e_in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_e_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_e_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_e_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_e_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_e_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_e_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_e_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_e_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_f_in[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_f_in[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_f_in[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_f_in[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_f_in[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_f_in[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_f_in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_f_in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_f_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_f_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_f_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_f_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_f_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_f_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_f_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_port_f_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1480.5;
		LEVEL 1 FOR 3519.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1480.5;
		LEVEL 1 FOR 3519.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1480.5;
		LEVEL 1 FOR 3519.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1480.5;
		LEVEL 1 FOR 3519.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2656.5;
		LEVEL 1 FOR 2343.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2656.5;
		LEVEL 1 FOR 2343.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2656.5;
		LEVEL 1 FOR 2343.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2656.5;
		LEVEL 1 FOR 2343.5;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("instruction_out[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1522.5;
		LEVEL 1 FOR 168.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 147.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 1239.0;
		LEVEL 0 FOR 1629.5;
	}
}

TRANSITION_LIST("instruction_out[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1858.5;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 273.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 588.0;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 2007.5;
	}
}

TRANSITION_LIST("instruction_out[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1858.5;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 567.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 147.0;
		LEVEL 0 FOR 483.0;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 1398.5;
	}
}

TRANSITION_LIST("instruction_out[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1522.5;
		LEVEL 1 FOR 168.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 273.0;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 1092.0;
		LEVEL 0 FOR 1629.5;
	}
}

TRANSITION_LIST("instruction_out[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2131.5;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 126.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 147.0;
			LEVEL 1 FOR 147.0;
		}
		LEVEL 0 FOR 2007.5;
	}
}

TRANSITION_LIST("instruction_out[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1522.5;
		LEVEL 1 FOR 168.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 1008.0;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 2007.5;
	}
}

TRANSITION_LIST("instruction_out[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1858.5;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 567.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 525.0;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 1398.5;
	}
}

TRANSITION_LIST("instruction_out[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2131.5;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 1092.0;
		LEVEL 0 FOR 1629.5;
	}
}

TRANSITION_LIST("instruction_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1858.5;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 273.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 2226.0;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 96.5;
	}
}

TRANSITION_LIST("instruction_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2404.5;
		LEVEL 1 FOR 147.0;
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 294.0;
		LEVEL 0 FOR 126.0;
		LEVEL 1 FOR 378.0;
		LEVEL 0 FOR 1629.5;
	}
}

TRANSITION_LIST("instruction_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2404.5;
		LEVEL 1 FOR 147.0;
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 294.0;
		LEVEL 0 FOR 126.0;
		LEVEL 1 FOR 378.0;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 1197.0;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 96.5;
	}
}

TRANSITION_LIST("instruction_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2404.5;
		LEVEL 1 FOR 147.0;
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 2133.5;
	}
}

TRANSITION_LIST("instruction_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1522.5;
		LEVEL 1 FOR 168.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 273.0;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 420.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 1932.0;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 96.5;
	}
}

TRANSITION_LIST("instruction_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1522.5;
		LEVEL 1 FOR 168.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 3141.5;
	}
}

TRANSITION_LIST("instruction_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1690.5;
		LEVEL 1 FOR 147.0;
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 273.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 147.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 609.0;
		LEVEL 1 FOR 126.0;
		LEVEL 0 FOR 1197.0;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 96.5;
	}
}

TRANSITION_LIST("instruction_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1690.5;
		LEVEL 1 FOR 147.0;
		LEVEL 0 FOR 441.0;
		LEVEL 1 FOR 420.0;
		LEVEL 0 FOR 147.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 1932.0;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 96.5;
	}
}

TRANSITION_LIST("ptp_sram_addr_prefix[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5000.0;
	}
}

TRANSITION_LIST("ptp_sram_addr_prefix[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5000.0;
	}
}

TRANSITION_LIST("ptp_sram_addr_prefix[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5000.0;
	}
}

TRANSITION_LIST("ptp_sram_addr_prefix[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1840.0;
		LEVEL 0 FOR 3157.5;
		LEVEL 1 FOR 2.5;
	}
}

TRANSITION_LIST("ptp_sram_addr_prefix[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1840.0;
		LEVEL 1 FOR 3157.5;
		LEVEL 0 FOR 2.5;
	}
}

DISPLAY_LINE
{
	CHANNEL = "avr_reset_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ether_rx_clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "network_clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "wb_rst_i";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_cyc";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_stb";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_we";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_adr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
	CHILDREN = 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_adr[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_adr[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_adr[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_adr[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_adr[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_adr[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_adr[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_adr[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_adr[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_adr[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_adr[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_adr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_adr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_adr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_adr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_adr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_read_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
	CHILDREN = 25, 26, 27, 28, 29, 30, 31, 32;
	COMMENT
	{
		TIME = 3301115;
		RISE = 20;
		RUN = -54;
		TEXT = "This should be 00 b/c the AVR hasn't finished writing to it yet";
		FONT_NAME = "";
		FONT_SIZE = 0;
		FONT_STYLE = "";
		FONT_COLOR = 4294967295;
	}
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_read_data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_read_data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_read_data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_read_data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_read_data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_read_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_read_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_read_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_write_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
	CHILDREN = 34, 35, 36, 37, 38, 39, 40, 41;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_write_data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_write_data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_write_data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_write_data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_write_data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_write_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_write_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_write_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_wb_ack";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 0;
	CHILDREN = 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr_prefix";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
	CHILDREN = 61, 62, 63, 64, 65;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr_prefix[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr_prefix[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr_prefix[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr_prefix[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_addr_prefix[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "ptp_sram_burst";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "instruction_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 0;
	CHILDREN = 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83;
}

DISPLAY_LINE
{
	CHANNEL = "instruction_out[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "instruction_out[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "instruction_out[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "instruction_out[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "instruction_out[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "instruction_out[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "instruction_out[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "instruction_out[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "instruction_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "instruction_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "instruction_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "instruction_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "instruction_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "instruction_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "instruction_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "instruction_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|core_clock_enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "wb_intercon:sram_arbiter|current_winner";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 0;
	CHILDREN = 86, 87;
}

DISPLAY_LINE
{
	CHANNEL = "wb_intercon:sram_arbiter|current_winner[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "wb_intercon:sram_arbiter|current_winner[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "wb_intercon:sram_arbiter|master_grant";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 0;
	CHILDREN = 89, 90;
}

DISPLAY_LINE
{
	CHANNEL = "wb_intercon:sram_arbiter|master_grant[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 88;
}

DISPLAY_LINE
{
	CHANNEL = "wb_intercon:sram_arbiter|master_grant[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 88;
}

DISPLAY_LINE
{
	CHANNEL = "wb_intercon:sram_sizer8_arbiter|current_winner";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 0;
	CHILDREN = 92, 93, 94;
}

DISPLAY_LINE
{
	CHANNEL = "wb_intercon:sram_sizer8_arbiter|current_winner[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 91;
}

DISPLAY_LINE
{
	CHANNEL = "wb_intercon:sram_sizer8_arbiter|current_winner[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 91;
}

DISPLAY_LINE
{
	CHANNEL = "wb_intercon:sram_sizer8_arbiter|current_winner[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 91;
}

DISPLAY_LINE
{
	CHANNEL = "wb_intercon:sram_sizer8_arbiter|master_grant";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 0;
	CHILDREN = 96, 97, 98, 99;
}

DISPLAY_LINE
{
	CHANNEL = "wb_intercon:sram_sizer8_arbiter|master_grant[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "wb_intercon:sram_sizer8_arbiter|master_grant[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "wb_intercon:sram_sizer8_arbiter|master_grant[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "wb_intercon:sram_sizer8_arbiter|master_grant[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "memory_controller:storage|loaded";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "memory_controller:storage|memory_addr_burst";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 0;
	CHILDREN = 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118;
}

DISPLAY_LINE
{
	CHANNEL = "memory_controller:storage|memory_addr_burst[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "memory_controller:storage|memory_addr_burst[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "memory_controller:storage|memory_addr_burst[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "memory_controller:storage|memory_addr_burst[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "memory_controller:storage|memory_addr_burst[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "memory_controller:storage|memory_addr_burst[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "memory_controller:storage|memory_addr_burst[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "memory_controller:storage|memory_addr_burst[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "memory_controller:storage|memory_addr_burst[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "memory_controller:storage|memory_addr_burst[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "memory_controller:storage|memory_addr_burst[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "memory_controller:storage|memory_addr_burst[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "memory_controller:storage|memory_addr_burst[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "memory_controller:storage|memory_addr_burst[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "memory_controller:storage|memory_addr_burst[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "memory_controller:storage|memory_addr_burst[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "memory_controller:storage|memory_addr_burst[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 119;
	TREE_LEVEL = 0;
	CHILDREN = 120, 121, 122, 123, 124, 125, 126, 127;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_high[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 119;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 128;
	TREE_LEVEL = 0;
	CHILDREN = 129, 130, 131, 132, 133, 134, 135, 136;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 128;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 128;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 128;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 128;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 128;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 134;
	TREE_LEVEL = 1;
	PARENT = 128;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 135;
	TREE_LEVEL = 1;
	PARENT = 128;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|pc_low[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 136;
	TREE_LEVEL = 1;
	PARENT = 128;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 137;
	TREE_LEVEL = 0;
	CHILDREN = 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 138;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 139;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 140;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 141;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 142;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 143;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 144;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 145;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 146;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 147;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 148;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 149;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 150;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 151;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 152;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramadr_int[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 153;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramre_int";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 154;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_core:core|pm_fetch_dec:main|ramwe_int";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 155;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 156;
	TREE_LEVEL = 0;
	CHILDREN = 157, 158, 159, 160, 161, 162, 163, 164;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 157;
	TREE_LEVEL = 1;
	PARENT = 156;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 158;
	TREE_LEVEL = 1;
	PARENT = 156;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 159;
	TREE_LEVEL = 1;
	PARENT = 156;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 160;
	TREE_LEVEL = 1;
	PARENT = 156;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 161;
	TREE_LEVEL = 1;
	PARENT = 156;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 162;
	TREE_LEVEL = 1;
	PARENT = 156;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 163;
	TREE_LEVEL = 1;
	PARENT = 156;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|DDRX_Int[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 164;
	TREE_LEVEL = 1;
	PARENT = 156;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 165;
	TREE_LEVEL = 0;
	CHILDREN = 166, 167, 168, 169, 170, 171, 172, 173;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 166;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 167;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 168;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 169;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 170;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 171;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 172;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PINX_InReg[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 173;
	TREE_LEVEL = 1;
	PARENT = 165;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 174;
	TREE_LEVEL = 0;
	CHILDREN = 175, 176, 177, 178, 179, 180, 181, 182;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 175;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 176;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 177;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 178;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 179;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 180;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 181;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_a|PORTX_Int[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 182;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 183;
	TREE_LEVEL = 0;
	CHILDREN = 184, 185, 186, 187, 188, 189, 190, 191;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 184;
	TREE_LEVEL = 1;
	PARENT = 183;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 185;
	TREE_LEVEL = 1;
	PARENT = 183;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 186;
	TREE_LEVEL = 1;
	PARENT = 183;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 187;
	TREE_LEVEL = 1;
	PARENT = 183;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 188;
	TREE_LEVEL = 1;
	PARENT = 183;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 189;
	TREE_LEVEL = 1;
	PARENT = 183;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 190;
	TREE_LEVEL = 1;
	PARENT = 183;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|DDRX_Int[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 191;
	TREE_LEVEL = 1;
	PARENT = 183;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 192;
	TREE_LEVEL = 0;
	CHILDREN = 193, 194, 195, 196, 197, 198, 199, 200;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 193;
	TREE_LEVEL = 1;
	PARENT = 192;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 194;
	TREE_LEVEL = 1;
	PARENT = 192;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 195;
	TREE_LEVEL = 1;
	PARENT = 192;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 196;
	TREE_LEVEL = 1;
	PARENT = 192;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 197;
	TREE_LEVEL = 1;
	PARENT = 192;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 198;
	TREE_LEVEL = 1;
	PARENT = 192;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 199;
	TREE_LEVEL = 1;
	PARENT = 192;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PINX_InReg[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 200;
	TREE_LEVEL = 1;
	PARENT = 192;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 201;
	TREE_LEVEL = 0;
	CHILDREN = 202, 203, 204, 205, 206, 207, 208, 209;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 202;
	TREE_LEVEL = 1;
	PARENT = 201;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 203;
	TREE_LEVEL = 1;
	PARENT = 201;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 204;
	TREE_LEVEL = 1;
	PARENT = 201;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 205;
	TREE_LEVEL = 1;
	PARENT = 201;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 206;
	TREE_LEVEL = 1;
	PARENT = 201;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 207;
	TREE_LEVEL = 1;
	PARENT = 201;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 208;
	TREE_LEVEL = 1;
	PARENT = 201;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_b|PORTX_Int[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 209;
	TREE_LEVEL = 1;
	PARENT = 201;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 210;
	TREE_LEVEL = 0;
	CHILDREN = 211, 212, 213, 214, 215, 216, 217, 218;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 211;
	TREE_LEVEL = 1;
	PARENT = 210;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 212;
	TREE_LEVEL = 1;
	PARENT = 210;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 213;
	TREE_LEVEL = 1;
	PARENT = 210;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 214;
	TREE_LEVEL = 1;
	PARENT = 210;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 215;
	TREE_LEVEL = 1;
	PARENT = 210;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 216;
	TREE_LEVEL = 1;
	PARENT = 210;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 217;
	TREE_LEVEL = 1;
	PARENT = 210;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|DDRX_Int[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 218;
	TREE_LEVEL = 1;
	PARENT = 210;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 219;
	TREE_LEVEL = 0;
	CHILDREN = 220, 221, 222, 223, 224, 225, 226, 227;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 220;
	TREE_LEVEL = 1;
	PARENT = 219;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 221;
	TREE_LEVEL = 1;
	PARENT = 219;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 222;
	TREE_LEVEL = 1;
	PARENT = 219;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 223;
	TREE_LEVEL = 1;
	PARENT = 219;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 224;
	TREE_LEVEL = 1;
	PARENT = 219;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 225;
	TREE_LEVEL = 1;
	PARENT = 219;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 226;
	TREE_LEVEL = 1;
	PARENT = 219;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PINX_InReg[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 227;
	TREE_LEVEL = 1;
	PARENT = 219;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 228;
	TREE_LEVEL = 0;
	CHILDREN = 229, 230, 231, 232, 233, 234, 235, 236;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 229;
	TREE_LEVEL = 1;
	PARENT = 228;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 230;
	TREE_LEVEL = 1;
	PARENT = 228;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 231;
	TREE_LEVEL = 1;
	PARENT = 228;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 232;
	TREE_LEVEL = 1;
	PARENT = 228;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 233;
	TREE_LEVEL = 1;
	PARENT = 228;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 234;
	TREE_LEVEL = 1;
	PARENT = 228;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 235;
	TREE_LEVEL = 1;
	PARENT = 228;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_d|PORTX_Int[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 236;
	TREE_LEVEL = 1;
	PARENT = 228;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 237;
	TREE_LEVEL = 0;
	CHILDREN = 238, 239, 240, 241, 242, 243, 244, 245;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 238;
	TREE_LEVEL = 1;
	PARENT = 237;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 239;
	TREE_LEVEL = 1;
	PARENT = 237;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 240;
	TREE_LEVEL = 1;
	PARENT = 237;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 241;
	TREE_LEVEL = 1;
	PARENT = 237;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 242;
	TREE_LEVEL = 1;
	PARENT = 237;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 243;
	TREE_LEVEL = 1;
	PARENT = 237;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 244;
	TREE_LEVEL = 1;
	PARENT = 237;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|DDRX_Int[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 245;
	TREE_LEVEL = 1;
	PARENT = 237;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 246;
	TREE_LEVEL = 0;
	CHILDREN = 247, 248, 249, 250, 251, 252, 253, 254;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 247;
	TREE_LEVEL = 1;
	PARENT = 246;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 248;
	TREE_LEVEL = 1;
	PARENT = 246;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 249;
	TREE_LEVEL = 1;
	PARENT = 246;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 250;
	TREE_LEVEL = 1;
	PARENT = 246;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 251;
	TREE_LEVEL = 1;
	PARENT = 246;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 252;
	TREE_LEVEL = 1;
	PARENT = 246;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 253;
	TREE_LEVEL = 1;
	PARENT = 246;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PINX_InReg[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 254;
	TREE_LEVEL = 1;
	PARENT = 246;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 255;
	TREE_LEVEL = 0;
	CHILDREN = 256, 257, 258, 259, 260, 261, 262, 263;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 256;
	TREE_LEVEL = 1;
	PARENT = 255;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 257;
	TREE_LEVEL = 1;
	PARENT = 255;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 258;
	TREE_LEVEL = 1;
	PARENT = 255;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 259;
	TREE_LEVEL = 1;
	PARENT = 255;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 260;
	TREE_LEVEL = 1;
	PARENT = 255;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 261;
	TREE_LEVEL = 1;
	PARENT = 255;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 262;
	TREE_LEVEL = 1;
	PARENT = 255;
}

DISPLAY_LINE
{
	CHANNEL = "avr_controller:\avr_controller_gen:avr|avr_port:port_e|PORTX_Int[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 263;
	TREE_LEVEL = 1;
	PARENT = 255;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_a_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 264;
	TREE_LEVEL = 0;
	CHILDREN = 265, 266, 267, 268, 269, 270, 271, 272;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_a_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 265;
	TREE_LEVEL = 1;
	PARENT = 264;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_a_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 266;
	TREE_LEVEL = 1;
	PARENT = 264;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_a_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 267;
	TREE_LEVEL = 1;
	PARENT = 264;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_a_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 268;
	TREE_LEVEL = 1;
	PARENT = 264;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_a_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 269;
	TREE_LEVEL = 1;
	PARENT = 264;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_a_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 270;
	TREE_LEVEL = 1;
	PARENT = 264;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_a_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 271;
	TREE_LEVEL = 1;
	PARENT = 264;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_a_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 272;
	TREE_LEVEL = 1;
	PARENT = 264;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_a_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 273;
	TREE_LEVEL = 0;
	CHILDREN = 274, 275, 276, 277, 278, 279, 280, 281;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_a_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 274;
	TREE_LEVEL = 1;
	PARENT = 273;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_a_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 275;
	TREE_LEVEL = 1;
	PARENT = 273;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_a_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 276;
	TREE_LEVEL = 1;
	PARENT = 273;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_a_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 277;
	TREE_LEVEL = 1;
	PARENT = 273;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_a_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 278;
	TREE_LEVEL = 1;
	PARENT = 273;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_a_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 279;
	TREE_LEVEL = 1;
	PARENT = 273;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_a_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 280;
	TREE_LEVEL = 1;
	PARENT = 273;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_a_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 281;
	TREE_LEVEL = 1;
	PARENT = 273;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_b_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 282;
	TREE_LEVEL = 0;
	CHILDREN = 283, 284, 285, 286, 287, 288, 289, 290;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_b_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 283;
	TREE_LEVEL = 1;
	PARENT = 282;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_b_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 284;
	TREE_LEVEL = 1;
	PARENT = 282;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_b_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 285;
	TREE_LEVEL = 1;
	PARENT = 282;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_b_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 286;
	TREE_LEVEL = 1;
	PARENT = 282;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_b_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 287;
	TREE_LEVEL = 1;
	PARENT = 282;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_b_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 288;
	TREE_LEVEL = 1;
	PARENT = 282;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_b_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 289;
	TREE_LEVEL = 1;
	PARENT = 282;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_b_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 290;
	TREE_LEVEL = 1;
	PARENT = 282;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_b_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 291;
	TREE_LEVEL = 0;
	CHILDREN = 292, 293, 294, 295, 296, 297, 298, 299;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_b_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 292;
	TREE_LEVEL = 1;
	PARENT = 291;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_b_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 293;
	TREE_LEVEL = 1;
	PARENT = 291;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_b_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 294;
	TREE_LEVEL = 1;
	PARENT = 291;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_b_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 295;
	TREE_LEVEL = 1;
	PARENT = 291;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_b_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 296;
	TREE_LEVEL = 1;
	PARENT = 291;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_b_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 297;
	TREE_LEVEL = 1;
	PARENT = 291;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_b_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 298;
	TREE_LEVEL = 1;
	PARENT = 291;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_b_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 299;
	TREE_LEVEL = 1;
	PARENT = 291;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_c_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 300;
	TREE_LEVEL = 0;
	CHILDREN = 301, 302, 303, 304, 305, 306, 307, 308;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_c_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 301;
	TREE_LEVEL = 1;
	PARENT = 300;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_c_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 302;
	TREE_LEVEL = 1;
	PARENT = 300;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_c_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 303;
	TREE_LEVEL = 1;
	PARENT = 300;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_c_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 304;
	TREE_LEVEL = 1;
	PARENT = 300;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_c_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 305;
	TREE_LEVEL = 1;
	PARENT = 300;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_c_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 306;
	TREE_LEVEL = 1;
	PARENT = 300;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_c_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 307;
	TREE_LEVEL = 1;
	PARENT = 300;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_c_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 308;
	TREE_LEVEL = 1;
	PARENT = 300;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_c_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 309;
	TREE_LEVEL = 0;
	CHILDREN = 310, 311, 312, 313, 314, 315, 316, 317;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_c_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 310;
	TREE_LEVEL = 1;
	PARENT = 309;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_c_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 311;
	TREE_LEVEL = 1;
	PARENT = 309;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_c_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 312;
	TREE_LEVEL = 1;
	PARENT = 309;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_c_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 313;
	TREE_LEVEL = 1;
	PARENT = 309;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_c_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 314;
	TREE_LEVEL = 1;
	PARENT = 309;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_c_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 315;
	TREE_LEVEL = 1;
	PARENT = 309;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_c_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 316;
	TREE_LEVEL = 1;
	PARENT = 309;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_c_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 317;
	TREE_LEVEL = 1;
	PARENT = 309;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_d_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 318;
	TREE_LEVEL = 0;
	CHILDREN = 319, 320, 321, 322, 323, 324, 325, 326;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_d_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 319;
	TREE_LEVEL = 1;
	PARENT = 318;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_d_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 320;
	TREE_LEVEL = 1;
	PARENT = 318;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_d_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 321;
	TREE_LEVEL = 1;
	PARENT = 318;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_d_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 322;
	TREE_LEVEL = 1;
	PARENT = 318;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_d_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 323;
	TREE_LEVEL = 1;
	PARENT = 318;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_d_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 324;
	TREE_LEVEL = 1;
	PARENT = 318;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_d_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 325;
	TREE_LEVEL = 1;
	PARENT = 318;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_d_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 326;
	TREE_LEVEL = 1;
	PARENT = 318;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_d_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 327;
	TREE_LEVEL = 0;
	CHILDREN = 328, 329, 330, 331, 332, 333, 334, 335;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_d_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 328;
	TREE_LEVEL = 1;
	PARENT = 327;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_d_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 329;
	TREE_LEVEL = 1;
	PARENT = 327;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_d_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 330;
	TREE_LEVEL = 1;
	PARENT = 327;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_d_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 331;
	TREE_LEVEL = 1;
	PARENT = 327;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_d_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 332;
	TREE_LEVEL = 1;
	PARENT = 327;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_d_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 333;
	TREE_LEVEL = 1;
	PARENT = 327;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_d_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 334;
	TREE_LEVEL = 1;
	PARENT = 327;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_d_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 335;
	TREE_LEVEL = 1;
	PARENT = 327;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_e_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 336;
	TREE_LEVEL = 0;
	CHILDREN = 337, 338, 339, 340, 341, 342, 343, 344;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_e_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 337;
	TREE_LEVEL = 1;
	PARENT = 336;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_e_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 338;
	TREE_LEVEL = 1;
	PARENT = 336;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_e_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 339;
	TREE_LEVEL = 1;
	PARENT = 336;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_e_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 340;
	TREE_LEVEL = 1;
	PARENT = 336;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_e_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 341;
	TREE_LEVEL = 1;
	PARENT = 336;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_e_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 342;
	TREE_LEVEL = 1;
	PARENT = 336;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_e_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 343;
	TREE_LEVEL = 1;
	PARENT = 336;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_e_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 344;
	TREE_LEVEL = 1;
	PARENT = 336;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_e_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 345;
	TREE_LEVEL = 0;
	CHILDREN = 346, 347, 348, 349, 350, 351, 352, 353;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_e_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 346;
	TREE_LEVEL = 1;
	PARENT = 345;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_e_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 347;
	TREE_LEVEL = 1;
	PARENT = 345;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_e_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 348;
	TREE_LEVEL = 1;
	PARENT = 345;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_e_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 349;
	TREE_LEVEL = 1;
	PARENT = 345;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_e_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 350;
	TREE_LEVEL = 1;
	PARENT = 345;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_e_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 351;
	TREE_LEVEL = 1;
	PARENT = 345;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_e_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 352;
	TREE_LEVEL = 1;
	PARENT = 345;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_e_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 353;
	TREE_LEVEL = 1;
	PARENT = 345;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_f_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 354;
	TREE_LEVEL = 0;
	CHILDREN = 355, 356, 357, 358, 359, 360, 361, 362;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_f_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 355;
	TREE_LEVEL = 1;
	PARENT = 354;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_f_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 356;
	TREE_LEVEL = 1;
	PARENT = 354;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_f_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 357;
	TREE_LEVEL = 1;
	PARENT = 354;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_f_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 358;
	TREE_LEVEL = 1;
	PARENT = 354;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_f_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 359;
	TREE_LEVEL = 1;
	PARENT = 354;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_f_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 360;
	TREE_LEVEL = 1;
	PARENT = 354;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_f_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 361;
	TREE_LEVEL = 1;
	PARENT = 354;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_f_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 362;
	TREE_LEVEL = 1;
	PARENT = 354;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_f_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 363;
	TREE_LEVEL = 0;
	CHILDREN = 364, 365, 366, 367, 368, 369, 370, 371;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_f_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 364;
	TREE_LEVEL = 1;
	PARENT = 363;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_f_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 365;
	TREE_LEVEL = 1;
	PARENT = 363;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_f_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 366;
	TREE_LEVEL = 1;
	PARENT = 363;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_f_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 367;
	TREE_LEVEL = 1;
	PARENT = 363;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_f_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 368;
	TREE_LEVEL = 1;
	PARENT = 363;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_f_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 369;
	TREE_LEVEL = 1;
	PARENT = 363;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_f_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 370;
	TREE_LEVEL = 1;
	PARENT = 363;
}

DISPLAY_LINE
{
	CHANNEL = "avr_port_f_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 371;
	TREE_LEVEL = 1;
	PARENT = 363;
}

TIME_BAR
{
	TIME = 20000;
	MASTER = TRUE;
}
;
